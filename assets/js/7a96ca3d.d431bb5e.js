"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[43271],{88123:(e,n,t)=>{t.d(n,{O:()=>m});var r=t(68835),o=t(37953),a=t(86743),i=t(6375),s=t(62201);const l=({horizontalSize:e,onMouseDown:n})=>o.createElement("div",{className:(0,r.A)("resize-handler","hidden","md:block","absolute","z-[3]","top-0","bottom-0","w-2.5","cursor-ew-resize"),"data-direction":"horizontal",onMouseDown:n,style:{left:`calc(${e}% - 5px)`}});function d(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},r=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),r.forEach((function(n){d(e,n,t[n])}))}return e}function u(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})),e}function p(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}const m=e=>"nextjs"===(null==e?void 0:e.template)?o.createElement(h,e):o.createElement(g,e),g=e=>{var n,t,d,m,g,h,{startRoute:f,showNavigator:y,showLineNumbers:b,showOpenInCodeSandbox:A,initialPercentage:v=50,dependencies:w,showReadOnly:x,options:k={showTabs:!0,initMode:"lazy",classes:{"sp-bridge-frame":"!hidden","sp-layout":"!rounded-lg !border-gray-300 dark:!border-gray-700","sp-editor":"!gap-0 border-r !border-r-gray-300 dark:!border-r-gray-700","sp-tabs":"!border-b-gray-300 dark:!border-b-gray-700 !bg-gray-0 dark:!bg-gray-800","sp-tabs-scrollable-container":"!min-h-[32px]","sp-input":"!text-gray-800 dark:!text-gray-100","sp-cm":(0,r.A)("p-0 bg-transparent","[&>.cm-editor]:!bg-refine-react-light-code","[&>.cm-editor]:dark:!bg-refine-react-dark-code","[&_.cm-activeLine]:!bg-gray-100 [&_.cm-activeLine]:dark:!bg-gray-800"),"sp-icon-standalone":"!bg-gray-300 dark:!bg-gray-700 !text-gray-400 dark:!text-gray-500","sp-file-explorer":"border-r !border-r-gray-300 dark:!border-r-gray-700","sp-console":(0,r.A)("not-prose","!border-t-0 !border !border-solid !border-t-none","!border-gray-300 dark:!border-gray-700","!rounded-bl-lg !rounded-br-lg","!bg-refine-react-light-code","dark:!bg-refine-react-dark-code"),"sp-console-header":(0,r.A)("!bg-gray-0 dark:!bg-gray-800","border-b border-solid !border-b-gray-300 dark:!border-b-gray-700","!h-[32px] !min-h-[32px]"),"sp-console-header-actions":(0,r.A)("h-full","!gap-0"),"sp-console-header-button":(0,r.A)("!bg-transparent","!border !border-solid !border-b-0 !border-x-gray-300 dark:!border-x-gray-700","!border-t-2 !border-t-transparent [&[data-active='true']]:!border-t-refine-react-light-link dark:[&[data-active='true']]:!border-t-refine-react-dark-link","h-full","!text-gray-800 dark:!text-gray-100","!rounded-none","-ml-px"),"sp-console-list":(0,r.A)("!bg-refine-react-light-code","dark:!bg-refine-react-dark-code","[&>code]:!bg-transparent"),"sp-tab-button":(0,r.A)("!h-8","!px-2 !pb-2 !pt-1.5","!text-gray-800 dark:!text-gray-100","!border !border-solid !border-b-0 !border-x-gray-300 dark:!border-x-gray-700","-ml-px first:ml-0","!border-t-2 !border-t-transparent [&[data-active='true']]:!border-t-refine-react-light-link dark:[&[data-active='true']]:!border-t-refine-react-dark-link")}},template:C="react-ts",customSetup:S,files:E,previewOnly:B,layout:R,height:T=420,wrapperClassName:O,className:F,showFiles:I=!1,showConsole:N=!1,hidePreview:D=!1}=e,P=p(e,["startRoute","showNavigator","showLineNumbers","showOpenInCodeSandbox","initialPercentage","dependencies","showReadOnly","options","template","customSetup","files","previewOnly","layout","height","wrapperClassName","className","showFiles","showConsole","hidePreview"]);const[L,Q]=o.useState(!1);o.useEffect((()=>{Q(!0)}),[]);const{colorMode:M}=(0,s.G)();var G,H;null!=k||(k={}),null!==(G=(g=k).resizablePanels)&&void 0!==G||(g.resizablePanels=!0),null!==(H=(h=k).editorWidthPercentage)&&void 0!==H||(h.editorWidthPercentage=null!=v?v:50);const K={showTabs:k.showTabs,showLineNumbers:k.showLineNumbers,showInlineErrors:k.showInlineErrors,wrapContent:k.wrapContent,closableTabs:k.closableTabs,initMode:k.initMode,extensions:null===(n=k.codeEditor)||void 0===n?void 0:n.extensions,extensionsKeymap:null===(t=k.codeEditor)||void 0===t?void 0:t.extensionsKeymap,readOnly:k.readOnly,showReadOnly:null!=x?x:k.showReadOnly,additionalLanguages:null===(d=k.codeEditor)||void 0===d?void 0:d.additionalLanguages},W={activeFile:k.activeFile,visibleFiles:k.visibleFiles,recompileMode:k.recompileMode,recompileDelay:k.recompileDelay,autorun:k.autorun,autoReload:k.autoReload,bundlerURL:k.bundlerURL,startRoute:k.startRoute,skipEval:k.skipEval,fileResolver:k.fileResolver,initMode:k.initMode,initModeObserverOptions:k.initModeObserverOptions,externalResources:k.externalResources,logLevel:k.logLevel,classes:k.classes},[q,J]=o.useState(!1),{onHandleMouseDown:j,horizontalSize:Y}=(({initialSize:e=50})=>{const[n,t]=o.useState(e),r=o.useRef(null),a=e=>{if(!r.current)return;const n=r.current.parentElement;if(!n)return;const{left:o,width:a}=n.getBoundingClientRect(),i=(e.clientX-o)/a*100,s=Math.min(Math.max(i,25),75);t(s),n.querySelectorAll(".sp-stack").forEach((e=>{e.style.pointerEvents="none"}))},i=()=>{var e;const n=null===(e=r.current)||void 0===e?void 0:e.parentElement;n&&(n.querySelectorAll(".sp-stack").forEach((e=>{e.style.pointerEvents=""})),r.current=null)};return o.useEffect((()=>(document.body.addEventListener("mousemove",a),document.body.addEventListener("mouseup",i),()=>{document.body.removeEventListener("mousemove",a),document.body.removeEventListener("mouseup",i)})),[]),{horizontalSize:n,onHandleMouseDown:o.useCallback((e=>{r.current=e.target}),[])}})({initialSize:k.editorWidthPercentage}),U=!B&&!(null==R?void 0:R.includes("col"));var Z,V,z,X,_;return o.createElement(o.Fragment,null,o.createElement("div",{className:(0,r.A)("pb-6",O)},o.createElement("div",{className:(0,r.A)("absolute","left-0","right-0","w-full","px-2","md:px-4","xl:px-6","max-w-screen-xl","mx-auto",F)},o.createElement(i.l5,c({key:`${C}-${M}-${L}`,customSetup:c({dependencies:w},S),files:E,options:u(c({},W),{classes:u(c({},W.classes),{"sp-layout":(0,r.A)(null===(m=W.classes)||void 0===m?void 0:m["sp-layout"],N&&"!rounded-bl-none !rounded-br-none")})}),template:C,theme:"light"===M?u(c({},a.Zw),{colors:u(c({},a.Zw.colors),{accent:"#1D1E30",surface1:"transparent",surface2:"transparent",surface3:"transparent"})}):u(c({},a.hc),{colors:u(c({},a.hc.colors),{surface1:"transparent",surface2:"transparent",surface3:"transparent"})}),className:(0,r.A)("not-prose sandpack-container","max-w-screen-xl","animate-reveal")},P),o.createElement(i.am,{className:(0,r.A)("col"===R&&"!flex-col","col-reverse"===R&&"!flex-col-reverse")},I&&o.createElement(i.Lm,{autoHiddenFiles:!0,style:{height:null!==(Z=k.editorHeight)&&void 0!==Z?Z:T}}),!B&&o.createElement(i.cW,u(c({},K),{showLineNumbers:b,closableTabs:I,initMode:"lazy",style:u(c({height:null!==(V=k.editorHeight)&&void 0!==V?V:T},(null==R?void 0:R.includes("col"))?{flex:"initial"}:{flexGrow:Y,flexShrink:Y,flexBasis:0}),{overflow:"hidden"})})),U?o.createElement(l,{onMouseDown:j,horizontalSize:Y}):null,D?null:o.createElement(o.Fragment,null,o.createElement(i.G5,{showOpenInCodeSandbox:A,startRoute:f,showNavigator:null!=y?y:k.showNavigator,showRefreshButton:k.showRefreshButton,style:u(c({display:D?"none":"flex"},(null==R?void 0:R.includes("col"))?{flex:"initial",width:"100%"}:{flexGrow:100-Y,flexShrink:100-Y,flexBasis:0,width:B?"100%":100-Y+"%"}),{gap:0,height:null!==(z=k.editorHeight)&&void 0!==z?z:T})},o.createElement("div",{className:"sp-custom-loading"},o.createElement("img",{src:"https://refine.ams3.cdn.digitaloceanspaces.com/website/static/assets/spinner.gif",className:(0,r.A)("w-12","h-12","rounded-full")}))))),N?o.createElement(i.X2,{style:u(c({height:200},(null==R?void 0:R.includes("col"))?{flex:"initial"}:{flexGrow:Y,flexShrink:Y,flexBasis:0}),{overflow:"hidden"})}):null)),o.createElement("div",{className:(0,r.A)(""),style:{height:Number(null!==(X=k.editorHeight)&&void 0!==X?X:T)+2}}),o.createElement("div",{className:(0,r.A)((null==R?void 0:R.includes("col"))?"block":"block md:hidden"),style:{height:Number(null!==(_=k.editorHeight)&&void 0!==_?_:T)+2}}),o.createElement("div",{className:(0,r.A)(N?"block":"hidden","h-[200px]")})),o.createElement("section",{className:"hidden max-w-0 max-h-0"},o.createElement("p",null,`Dependencies: ${Object.keys(null!=w?w:{}).map((e=>`${e}@${w[e]}`))}`),o.createElement("h3",null,"Code Files"),Object.keys(null!=E?E:{}).map((e=>o.createElement("div",{key:e},o.createElement("div",null,`File: ${e}`),o.createElement("div",null,`Content: ${"code"in E[e]?E[e].code:E[e]}`))))))},h=e=>{const n={hidePreview:!0,showConsole:!1};return o.createElement(g,u(c({},n,e),{template:"react-ts"}))}},36887:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>O,contentTitle:()=>R,default:()=>L,frontMatter:()=>B,metadata:()=>T,toc:()=>F});var r=t(37953),o=t(58860),a=t(68835);const i=()=>r.createElement("div",{className:(0,a.A)("pb-6")},r.createElement("div",{className:(0,a.A)("h-[600px]","mx-auto","max-w-screen-xl","w-full","px-2","md:px-4","xl:px-6","absolute","left-0","right-0")},r.createElement("div",{className:(0,a.A)("border border-gray-200 dark:border-gray-600","relative","overflow-hidden","rounded-xl","landing-xl:rounded-2xl","overflow-hidden","w-full","h-full")},r.createElement("iframe",{title:"MUI Example",className:(0,a.A)("h-full","w-full"),src:"https://cloud2.refine.dev/.refine/preview/JYWwDg9gTgLgBAJQKYEMDGMAkBGANHAbzjSlRiQGEIA7cgDxnwFcBnJAZRhXObYFEAZgKQZelGvUZxWSALJIQEOAF84AqBBBwA5KXQxtAbgBQoSLELE95BBAjxV6zTr0YAtABNNAejQAbYCRaI1NwaHgiGQBxJBgASQ8gmGAYAE8xdliAGQg0FD8kMRiYHLyCsQAVKBRqFj9uQuk2dgALCAB3MSzgFikZAHlqRuQBYCH8AEEmGBak4DzyDxU1DS1tAAFSUaHEgDdfaCQQs3C4D24UAAUNXeBEqBXnDa2xpD3vFjMCt1Je47CLBppkgoNcILd7vgiBRuGgWhM-H4AHIoW4Acwa+BR6IaFQgyBYECYUDQSGWTjWmyQ2zeSH2rhgPyJ5Cgbl2ADZ-uYInAAEIadpsKC2YFQfAi8gscXMxr9aYFByPNYMpmizyaLmnCgsFi8lBsAJDJU6dYgJjAbwgBpQYD5bza3X6pCGo4mE4WKJ+CAAI3ynFSBRYxo2ZotVpZtr83k9Pr9aUDmosRBGrwqsxASClcAAEigQN7iWiQfJqEx8BRrI0+B4UmIACIXKI2jz4VodXnTGA0fDVlIdmBd6j4OvO2JIfuD-DdXqttqdOBIpj5kEAMUCfhbcAqSAYa+dHioYSGtDEUy7aE0YAVw2pr3Y1HQAGtfaCbncQWIkfZgKMFsAaGCEIflu6ZvFkKCpMyABqABMPZQBoUCHpAx5SGeLSXCgRbkqsJovDsdKWuaiY8jIVQ1HU3D-kOcBjCkyD6HE2AABxDAwOFPCqwAsWxBhugC8ANlAj6yBAiRyjALpLBSJqht48w0CwbjhiCkbeEJIliUgElSSRcDdGiLQwKJ4nyq80m4SG5ryRetTKdaakGUZJnaWZOx6UQK7QCAVC0BofitqOohwCWTBxOQID4LyEB0Pg267uum5nrkl7XhxlJySpNr5HpExgGAeoPDJVlhg5dp5QVKBQLluwXEVlmmtZWVqRMtVcNV-HcnAcS2RONDBo1pURnaPU0H11B6ZwT4DZlZVRlNaCPnpeIQH4L4zU1c3eCta1VctqSQGi1RgC0qQbUNql2hUB0QEdKAnakencaxwbPbxHkgQoSCAe+DyOA1s3DVGvQBpmH0yF5UBaP9TxUjS7wqm0ECPm4AjeR9DZcE2dzpbJ1l0J4FxuEddyTY+o6Dudlpbew5MKjQH2+TA-kFH9waI3YKNo1DemJOQGDQK9PE7oy3oCkKbj1NQaJMFhtL812HWhF1eqLUEFlPG9ItuHQLSsr6avUB4ITGLZvRbv0ADSfBIgA+tbACacAALxwAARPhSBuCg0wtG7Jim4p8A+zMP33C7hDGHAcBemiYwAFxwPqqTUGgcAABSREKD4ZvgCgoMAAVwGA+osO00BLMoACULsAHyR9H0c-hn6cyFAOdkgAPp3cD54XNcAGQD8Xpfl1AHg1wQUeN9HXplJw0BywAdGw8QRenFRWzb9t8A7Yjt3mSBVyYM-R6QMDEtQDen9HLBMGgpI6onzNMIU0836QNakBgeKJ273hu1wO-RuygT4gOMMA8+l9r4zzvg-TMLBE4CHyGwIBN8QSIUTlPG+0cO5-xyHHagfAELQEAcAmeGYdRyz-nEagtUAhLDbh3OAgsS46jHh4MhN9lBoJAWAnh09Y7MkTsnVOGca7O3rtgxuc84yLyLEvUgihdhIHCgoDeW87aO2PpA2I0DpGwPvo-RBcAX5vw-m8YA38YC-3dt4WOYwuF8OngI6OcIRCPhESwFOad04SKkcAs28Auzkyvq7WRfgF7VAUUWNe6jN7Wy0bvHRM9m7pxCUESe5C4BQPbjA0+IdZi0HmA0Dwz8oCv14TPUBwDlAQJnrkq+BjG6FLmAsN4SCUHmNPp-KxIgbEQD-vY26jiqkqH4bw2JlwQQgB6J8RSXifHiLrnAUsiJJmxASHMNIiyxF+JWc0oJpjkZBAjhEqJy9YlqJABoxJO8HYpMbmkjJ1AskWIvnk5pqSylwDwNk3Bh8-4ACkIAtCvnWCASAnE31RHVP+RkYBgEQd4eSS8wDVDalVJeD9vAAGYAAM+LoXOOqboj5V81l+AmdPGgxDMFJ28XsjB0B-H5LNqtJAS9mVQHTtyx5Z89GfN7iQv61Lo7czRPYTC7CK67N8SXaoIAWCsuaY0-Jt8jEIPKZU7JvTrG2P-kwMA5xyBuDYWXCuxKNXwJ1F+ZIv4qI0Cwf8uAlCWDUPdnwK0hc4AtH1HAb0SBTlsFoEvK1Kgxk1Ojq46QxqGjSotePOVGcFV5mVQcsl+jslwOMdq7pDTLH6sGXYhx1Bw05oQXan8JTkhOvVY3N1Hq3bsE1TqAQTBERnSNSat4I8ZXjzDWM6NkbqU1MDrUeAtsABWLA6BrgKCiDMmBvQR3-gAVSFCwbwvoL5+uoO0bwccYDeAimAQIW7wQgluEgdobgdx5ivEgD4JIDi0BFlui8XpWSKESPJI2O4l4wFnf7NQTBU61qvrbCAYAIP5AoH6sYmBmLp2g+mogCoY76hgBMG1LAsjZnYBHMDiR4aGBjrEOA9DX4R1QwAbXxQAXTIxh4AEdsBkfaC0QuZJ06sYADwsKRUvAo0sZiT2IEHQTNGkW0eAExiTE61BhMEywWTcAADUvz5OsfU67GCZG0kobAC7Z2rttDQdg34HDxjtBwG7lJ0zZmLPUTg-kPw2hB7Dyo2SUzqyO1+HE2q4jt4dhkdUGk6DJmzPoBs3ZnukXHM6GczQfI1mEEecsPUXoaWdT4cI67bzZHvMRwENQdO3nj7LGdGwWiAgM4Jd89oMo7m4sOca8lh8fgYSIgy0QYrrtSvp3TkvEbVU0TpskZR-Ir9sVufTll7DuG8v4BG0vMbyrKsLZy3hgjRH-2keWKoNVhWVAQLO+O82VAv0uSZiLCOJAyDiDfQwdO08CCqCAToi78ArvQBuxIEWYcQQR0ztPOEhcPCkCHMYauGa3GSc-X9rSK5VilDkdEnzMdcjo8uZs9ebtEdQBcm7R5RyejsFSL0BQ1xqQgiCKSDSEcoMwZc11hD1AkPp1o+0MYXh5zmZZylqzuHtD4Ftis22S9wxwnkDWFA+AmtudF3AW2MEJcwVezPN26d0W06gEpQnbgWDuIzInc4wkq5OKrgrmL6Wxe4ol7iqXsJZgsAY19+HinvFU5ADT4QUPSQR3J5TiKfu6epyQIzgA-O7c3j43ZwD-gEQyMB-Zg8k7Rn9jRV4uQY0R5oXByCa8boTlyKPNBo8iYrOWrXveh62OH0kvCPdNCQIIYQGAhsquATzo2HRhPY6r-Izlq9rnpwJ6tJHiRAGuq0o8nhcBM9aXdwHT35tV6-aJ1pEH3fUl1fTlnqL7tk9GRJ-WnPWlx9x5J2A6Nvc-A1a+XAC-iRx8n9T-y070bV85MFVfYv0cDEGA2KlYfABQGYtA6cm+-2z2MAS8QOYo9a3mzqOCz+sQLkicG+k+W+iQQ6DaWkeBC+tstsBoAgicwW8MYuJBRIJISAWCowC6gKKuM6c63Gi6SAy6+ALoi4y4UAicAALOyMoHUtkuKKgMAQ9g0GAV9JAWmF9AgVCC6iinAJBEwMQDUMQHuthDMGSDoRmBJl+kGLMKQEvL3HQA+gUInIfolm7O-gnjHimEMHIZQkvLIHLLQCgInogCFkgM4ZmK4e4VwBpC6noXQbPokEfrYcACnvYd4TSH4SwEvLyH4NRonI4b4aBIkcka-BpFQaQeQftuZHkTQaSPQWwUwdOrOvOkgOwZwTHK8DwYGnwXAAAKwwTCH1I4L4Dg4bhQ7ZJVzAIDHRw6JjpHKVGsGMFLqeGuzrqbrbrcBMB7oHpHonoKBnqZjeCXpQDXq3r3rgAFDPpoAHBHhJBbqzAoD3B-qJB0CAbAZkbtrgbUQq6Uo9AtBUD5CZikiYD8HzYtBZhQB-ErivKWBpJ+B-FwAACErslKgWf+McfxYW9+j+v+5KOSgJZWlWqgjgYGGATxzOlm8GBcHOAA7EZmhuRvAFtktrtq7BQeZMxhRv1ipvRvJixmxhxlxgUBnPxipsJkEGiGJpYEcglsyXJmRkcqVtJqpjplpgZhpnpgZvvkZkfgLpZttrZvZg1k5oLp1t1u5p5lNikT5tCf5rCaiXSaFssBFsZoltoLbjqBqfFjae1jqaliLuJlScYnlhHCdkyYNhVoidVmSNaSqc1o6W1tqQSUruJn6WVsNqNlAONqyt5rNoiPNlhttstnAKtutlXJthmdSfltIIUZaViSidAidiIedt9jmKgOHK7KDrfMkItGdK7GYkArDpNtIkckQFnvgC-mSKoLSWwLdi9tAVpKOTAC3j2WcBcOQUKMsMOUgMUFssUmkH4j-kcnCDUEWOBNLLLNhEuZkCUIPkgBuenophEpjtENkKeeeWvvAGgMSFDieWUJjleeedPGqgAd4foCAY9tIRATAOnBVIVFCMXBAJ8BBpgc2Y+GdDHm7L0PMHBQnn-KQPUMkCojPsQfkcWSRkUSrtQcSKUYQAwTURUSwdUbUfLvUUMI0SCInLisxB0TfGIX+ZIeQIBUkBvHYLtIgQQDhc6GQXhT4ZuDhSUWEQQGRewYnOMVRYfJgDRdwUuE0YxQAJwsVdG-kSGgHgHcULSPiKGoHRxfz9LURoUdDhozw84eAzB-zYCEoACkVljcU6rA9qqQt2tAf8AgBQBM6sLl0c+Q0R1A1yJiBOSQII2FJBQlBR+FOwxRxFkl0lFFVR5RUxXBDRKlDFcA-B+KHRLq0cbFOlAFelkBuY+YhYxYQQZYhAglfgwlFpbwiVtBZRkxYRcl6VHBSlWVvBAhQhqgQxxlxVcBHFbeZVwFBlRlxlJlfSuJdaHslleBN8Nldl7sDl+Kzly1p8blSFAgnlAO3l7svlO4d6RsgVLSyeoVEU4VpIb6UA0VuFTVYlRFrVpFXVsllFXVilmVdF2VzR-BxJBVM1RV2lo1ulMhwFkMPkEg-k4Fs6WCrqYwAA6ncGteyPwRGoRU9SWc1djRJW1eRabswWle1T9bRTUf9YnC0bippSDXACNf+VIRNenJkAUMFE-jNTWO6t6AUGuv+lAC6HmttagSRj7H4DAFBNNmEU+QhEkJXvmvTbRNQGANMGCEiojW7FVLaJLCgIGn4G7H-KjTMMyJhvrQnjGkrVNtlEdYhVwEbFVJwiLTggjfWvTYTn-GMMYSkBdagW7MPK4eaOwLsGiKNNQEyPYIbW7UrR7e7F7apKns7agZbVbe7AHbIEHVwItBHfAPXIHcANdIdMdKdDnVHZzUrdzVeBBCganTfHQOFdQDQFCknSDSwCAH-LzbkPHi3cnT3afCnfTUQTFQ1XFaJS1SRVJR9STRMUTd1b9ZTX1a0fwcDanfgLRqtunLbC8SwG8RAB8cbhwT8W9MJjuQeZmPgPspNunIvu7nmQxivOEH4s7mAENlLGiKyj+VbUAeDaVZDenKFNctNbXbfEFIsInLLS+QrUfm-X3TfOTKkInDA4VSDWLR2pLdLYgzubA6fDQBQAEItInJfQEsA6fNudLEgHuTLHLOmdLJ-rXQPancgZhtLHkbFSJZQfjUlYTTJdPfJRlRTfRc0cSbTSISQ6Dd-UzZxSzVNdHVbaZfNdQBZe0L7SDcFWiNdQoLdZFQ9dgzfLtR5V5TAH-HdSyI9Ww89ePclVPZ1WTT1X9YvcxO0aI2I+I+IT-czX-a1HVEAy48-nQDXb443KtS0H-DBPwWAHQCo1bbMNEUZKE+E5E7o8ZVaImWMAgLE0Y+7C0RE1EyDQwyQywCSInAAAbyRWhFhbq+VYRbqYAEBv3KArwh3FOsMj3sMEXiVcPvXtWfWk2z3k3KUONA11KBNDUkOjOp3jP015nIMzyTM4JzOsVg2SPjV-1h3jQ+MzWx1uzx02iJ0zONy4P4OeLLJdn7OwLoGX50PGVD043xV40dNvWT3dO8PfV2ML2qW-KEor3034DWG+ZuzX5wAOFuPLNcWQFOTGRaQ6QEUCXD2NW40vWEidNPOz09Mz3UXz2COJwOUDVwA1xpEgtjVgvAUaQuTQsJV1Vwuj0cMPMT0pXE02N9NvNYufO4sLOnwDH7MX34ms6EmIakm0ZtwK4dZuk2Zi4S5raYpQDu6tY8tC58sklc5CtJaunC5isq5q6Taq5Lwdy31wBDwZxnNLNEvSNZ2GWyM4LyPQXuwCi5PRwYhgD2Xsg5PYNqMaNKrGPaN2twD6M-gHVvq20mNRUtPwt3OIsE1dOosvO2OYtU2-IOXfNK1i4its5EmYACvKuqms7qn26O46uHwysGuf1K0SMmt-2F23TF3pAWszWu3l1yM9BV0IM1tK311-yN1DDeuoFt2e3UAuhuCd2LRdv91JPDpGs3y1Q22ZOIVMDejJCSRIAwRmOtMWOcOPP0sdVfUxsCNxvYDYBDOdEkPJuqsKvptKtCjCuqs5sq6Y1av8H5sZju7juNzsuoGvtaWlsQ1AUgVSvw1FMq4punsZsXsqtqki5i4tES4tGSt1Tu74D5CZNyu6ns5nuCsgdZtC7Xu2zsgS7sgPtIBwfY3mMIuWPcOpXosKXMu7swQaWDVGvvvDHIPstzPjNDUjEBxjFbt9NqWrreAboghbo7qLE1DLEpCrHgDnqbEqLbGBC7HmH7FPqFNHElwVO+ANCSo2gbFjW3GRP3E4kQYAcnsofshkkekUaekILem0kIsMnwBMl0aMa2e0TslwCcbcbclwACaoZ8miYtDibCk2minyYSnKZ0YynYDabylwD6a1YtxamgfZsi6tbxcYe6nRn6tebS0mZ+aIhmnQLPWIkhm2n2ksDhkpcpvqkekFlek0mGmvxFZZcDZlYBlVYP7Bn74pdhnJfOmRm8vpd9aNdKZDY5mJkTb1wpnNbpnZaFkrYJlJn5nTc1dFkFeHbll5KVlnZHIwjkAaeeWVg75w4KbmzMwUQYXXlsDkS1Bnf3lHcRDALuoqLjTq1Si6I0hUCkCI3cwgA5AXFjBogRq6JxxU5ijAJfdTTkCI3cpBgxpDmt7Q2fkCqok-mfu-3fsViPbgU9A-c1jSxILeTY9-f9mojjidgAQaAa3P7E9Pfk9Zj1Whtj1rt0vWNce1FqWxuL3YC0eiHGtfvcXRSxTR0XgnG21fcuV1tnCNv1DNtuwnWJNqB+V1hzXWsT4pEgBloA+oEhwQDITXh-wQBCDLv080uvVM-POMus-s8fMwT5XOOLMo8ePfvxQwB7gbgbOnyrakBA8sjj7zsFAz71uNykAACO5on85Sp3DQ4+X3iiSAIffSnC1uyD1czt3KicEJEJSHcGxnXOUPl7YH6r4uWrgGKQBQcHyDswfgYAIITvBL7FvPkBEjKOWEQF+AlKx7BJ2ftGufCXmH4HGr6uxfC7efiXBfDuWrTujaRYt9ztKThC7b3k+QF17aiIqNtlITpiFSitN8tCqtJQetzoz3iNO9No1AxzZiGvxlaQVff8kgF19Q+t4fV3kfBO6n0A56S8ow+4iRvvUKifM1eC7sH-ob2pbtMTeVjM3izwUps8d2i9GCC0Tpoct+igxaeOxwgScdemtRZiLx347655iu6EToejE6npJOWxHYnenk6PpDi3gFTlp1f6act0liOAkBl06gZHi-UTPqm0QwtFTOmWcztV0s61cVuGGezjJkc4UlnOrsdjK505I8YeS3nETAKT85ClJMIpMLsF0kySlXYYXDTLKWc66ZouipOLj1x76dZ1S3XFUoB3S4Gt+sJpXLpYCCw2crSHXYwXaSS6akXBFXd0pln4G5ZauvpQbv6WlqYkkS7XerC4K67uCLBJ7frnV0xyDZ4ya2UbsmWlqpk-AU3RbEt1m6JD5uzGHwTtmW6OCyyx2aWmFk26SZtuSAXbr2HgANld8t3DfhH3ID55fC1QJ-kXmnKSZmkD3EngODJ6oYxknvHoCyDGRg9C8klYVIhGh68JYeEMbyAjzW7-5gE9vKRn-WqHw0qepPagIf0p6PdNhz3ENiAIpa0twBUbc3gpWYiW8cqnPBAa4zr6o8+eMUN3vDmF7TtRe21cXpXSl4+U-KM+WXor2sTmV3Yn6JcOr3yZJxpg2vVKGOD14G8DhbTI4WALI4MtIBS6C4TAKt429D2p8RmmW0d4iwXem4APh70qFDCQQ4+O4P71iETAWALLc-sn2Qaz8E47sRulDEX7O1l+fgVfmtXbLIMd+0wcCPrW2FEBj+YwM-pvwv6oEr+YRN2KWF4J399+fgR-pRCLwv8dub-fwp-w3CJEKRf-YygAO2ZO1kG3NPWgUB+TtkiOK7EjozxOE8MzhqIy4c0TgE3CX2LqHEfX2ApO8CRTwxuMSK95ki3YQA70QWjj5h8GhbQs8jL28gx8QxbwEnM7XpEzVU+kJDPoBxQ7cCu+IqLMKl1FZ24VcErH-mXxmoV8q+UAGvjz3uEN8QWTfNEC3xy5FwOBp7dMd32zFqtcxquAfj-2H699R+ebSfgRzzIz8xsTImUQvwNrsj-MXI9fjyJmp8i9+gomnkfz1iii80EonBFKJv4ix5RD-MMcqIjHtINO7-TUR4G-4l9f+ztfUYGItFG9QBSLddszwwHnCHRjFeAcM3mZIDZmKAkwKMUkx2iOCxJbAXMSE5LFCBx6YgRsVIGydyBFhRTi+hoEfo6BknAIL0B05p4tudA1INOBqEnNiG9Qk7uGOaGXddxN3GciahQDYwPAz3Rcq3kxhkTmw8wrcqtBBFBgly8gRQD+SIaL5sk5dI8Tf1PEuVZe2LbaucXuA8M8JRE1UZUPVGJEjxJ4hdnGJdSzJqAk4xONb3xSEE8C3ExKH-H0DUQWALlYSSCFEmtDxJXAXmpyh0mKR5J3bcICaLCLII2u21KHPcAoDOhFRrAhRr-gFqZwckHQFQG8mMrfl9mywlZt+0b7RJaxlKI1m6IrGTU5w6zSwFxkSBljzR38CuNcgSCJwBQS8O4HCJmA9BSOkbW0SiL-FPi4AuKERniyinliHe3FaofFKICJTfCIsYWr-gvDjx0pPyLKTlKvHPwuMtPREYVPI58MSp6InKrimXp0cra0UmqZARHDXh6pvqd8MlM374BUp7UiKBlJ8ntBspiLNhnlP6m3jTepw4qem1Km4oXxlUqZkx1vwjsXUbrT1vdX0l1kQQCIEKg9NMbbVFJykuAMxDUnZIU6DGMZLRjElndAZn4zooFJnjBTiW6cTCVCDp6HD7mA0lFkVIfFLpiSpU-gsxVfEzxppKw79jRPIngVVspE8ifsIMJMTwGjEtXlmC17ZgkAGTFqQjPhFIzDpNooad9QxmjSAatHS6S6OGJfiOOP4k6ThxmJ8dAJCxYCSsTAkXppOZAvYpQKU7UC5Y8EtUfQI+BzgUJenNgZBm3q7196XxXFL8X+LolxMoJcElCTrF5c8kYJFgIGTa72C4SAJFgECQ3KrcHiHkhsShx+KoYzOlJPIVZxZkeAnOIg1TGILZKSCOS7nXjJ515IKDBSRAALlKVkzqDFMmg0UjoIi5yl9BMXQzOVyvZuCnSUQqMj1gNI2CrZjs80oUNi7KliuhciMiYJzEOkqui3AQUWX8FGkSszXIIfbJqxFdGsEQoubaUsGlzLAsZYbnNzG6xDUh6QzMgRiyG5kFuGQtuXtjDaIkjscJDbjWQqG7c2w7QA7qcwfI7izuBE4ydd1JydDgEIfEEKkAJBoNEapE8BuhLvkS18AWPPejj3+4w9mhe8+iQjnQlM5UxabH4rRn3HQBb5mYNBl2NMF99C+9cSXKRJXwQy4SyPQlu6NZpzhMeeGD+X90TjvzfuLDHqUHIKkoyOZZNdkKVJggHs7eaCmKazTNbgUHWgkohau2OFIjN2aMjghQu5kqTsZro6qfjO4oVs7oD0cCpO1tC21vQYkVINgF+ESBkaDMlPB3VWhO0WFVothYNORGcLMA3CgZlby54zV8AIM5-mAvoEf9Eo2ohPi6nZbdEAFMeYtlDNoUzTgKgjL0WPIwbPF-Mrxd4oGENmb0gFiGEBaYurYtisOmreBTBB2mEcOJ19N2CTmtxqKw2JCjdmi2Gk6KzpFU5jl4QcWNxoZ0jOmLEG7AJTFFcTd2Nbxdauc0a6-N2KpIqXMzWFyMlJdGz6a6LeqHzc6cIT5k3wbFAikKUIpugiLToYi7WjUGnZSKPAMiuRbQAUWMz3YUijcMAOIXWj2FqS76q0vsbtLqFw1Y+SYoQkaiLFg-P3sx34XBKgWhrGankvLb4jEoyEJuieHcVGlZKASjnEEvQnQKm5pXXNuP0OX9i4RDStmSsuaW1F1l7zHKvwWwCdKslhDZBpcu-a0wKYRShqSUunblK5ewTUJoSjqVUsllGi0hVooo5LoQVLLfgpkusXvj+ZeLQWWgOFnaLIOYsnAYJ0lkEDpZaxEgXLMgkKyDiSsuCdQI0AeB74QGXwJWC1nuSDOW9LxTvR8WfEOCGuW2atNNkgl98tsyErYICyVzoEts3uWSCIBqpnZrs4IdiR1mGcO+abI2b7N4H+zW5vggoWvPEGhyWSTnVjJHOkHRy5BQmeOUoMTkqDAuag8UhoNC4yZwukXHOYYKGz5z8+6WcwcPOiGjzrBjXVVdbKvgrdwszglUiVzK4eCC5NmFucvOtU+kShsQrueVh7mtc+5qa20oPIbkti9SvWQtU1wnnZCp5E3ObBZ2tULykhS8ueTatErryFhsQ0oTWTBD8qMA6PBoAfJwlHJjFTQpcoRPPlgIey93DYb0K2E08BhPhd7uMK+4E9pYq4wYcDzGS2RmYq0EYd5HB7jCoeF-GYWwHh4dDFMRALXkL0fTkBthwS5KI+uvCUSr1SAN9VCKLyqpMwEbCSQeMzBOJq4P+SGbkqcWCLICo6ngCCWwUEK0QePKGNurRBE9dhy67Yd0Op79DElDPXFU0t-GYAWilCiadz1hUPCBe5dR9XcteHeQxe-jSwJ8OrrHUfh+AP4Ur0BEq8QRFtbalrx17Qj3Y+vAQIsv+URs8VHCglRwRI08LouL4rEbjN6UwzPRiUIMdmRGx7rveMow+P732bB9Q+HSHZSqOj76b4+Vk65rqNQJJj0+Xs01Tn0zHvLWxDpMXOEo1b4dCxxlYsdX2alKaWaYU5vkkFb7+Z2+vLFDkbIzGTDHNWHMfvAqdwdwotsC29vAvvZ9jp+DIocYo2ZGjil+E4qpcLV5Eq1+RCooUc-iXGn8VxYI6OOuMAGbjna9-Z0EqOu5ux0UYkAVdJIOUdxzNqBfUZ1r+XqLGl94qTcRrOmYi32-CijbIWuX7g1Nvo0kTygBafEbQOpXTfTVM2hip1EYkzbHwM0J94xlmnBNZpTFGc7NEW6AFmM8EF86V8C6DokGNxLaIMHm1Al5tLE+aJtwFfzTWMC11iQt8rMLfZsi2NynNnylXKLPgV4dbtJAYADqQS0F9-xWrYklLgQRyw0tM1RkZlpHGsixxyDDkd9OnHGVZxAog-guMsAijytG-ajJVtdRoNC4rwfLTNXq1uSNt4+FrcOqAzmKv+S8CHfduohdacE+ornVDogyib+tAKzRZJrSUya9FYKkRmStQJ4y+lk2hKNNotazbgezOm0KSBW0g01thmpnZGKhjRidtvO1AopMTj4ol4fyemt5mpG0iVpSffbeghFRp8jtJqxDOFubEXa2xWArVsxDRQa7fl5fZ0CWLLFvb04H2iKcFuNWhaTtHurNW2J45as1Kfu+YI0FCWwKHKEuByojqoRT8Bx6W1JujpZFWgsdM1HHXlvJ1b9T4BO4rcTuFFlaxRFO52tVplH-UtxDWozRGJZ1tb2dWo5PZrod2nx9R6KFPcLqSXLKxdqysmpLraU5UWiA1WXR+yg0K6PRU213iro00ki1dbsZqGyJbY66zRZ85-ltpjG7b7dKfJ3cmNs1u7-tZ2mHW2L3aZ7sAzuIGI9pwTPaQ9S+mGeHq+1t8o9v2mPQ5sB1YdsArm22CAef2XQi4aegvtgBi0q5YD2e91LnoH0UIMt8-THTlpX7l68dqBavfONQyLiT+Dewck3oOjSjb+dWhUY1uf5d6MA7WjnTvoNooHG4+oxg6Pvw0DaIBtK0qcSQhU4zEBcu3zX-SZgsxgIAfQ9f5Cpl+Rj1yDfUcEouoVJAwiNffdQeM1Rj99Z+SnU5JyreSjxfklZDkscV3DnFIFCEe+rHBqaZ4q2V9WYd-XfRV1RrVbEeL7q4MtCYRTevgAqyHcraR4peK4Z3JnkAyRrSnTPFiT9AdShOtybxgih1CraEG2uuKsRDeK96vimVf4uO3X7QF6En9Qp2fWrqgD6epLfAfvYdZztce5zfAau2VHzFRsBXGGTFzYBQd8Bkzs+xng65WUV+jnOFrAB36KjYBuHfAv3Y7TejwOsA97sGO+6uwnAE-mhp0D1H4DCewY2pT8QytEsnRzAOFpSAKARjyuVXPinVzm7up0BtsTBGwDq4n9Ux5mITzmNK4XNoBmCBririv6raCS4430ZghwHVcTuAsQkpiXux4lz7K5r3SNY9BwjEGPgCH3yB4gpajysIRBk8NBCJczyjY1zg6w7GXNRR1XPezuCrHfM6x8Ld5nRMasqjquaDjieYMWIBas4whqmiVQf1n2oelTcroD6oFVstJl7iQwZ2qHO9fK7vTJNmxqzUgxupWmjvQPF7h24i0ZXrzcixikmh2-Ezfv1xEnVcTRlUwKcklQBUgzxpWu-te2f6-NVY8KT-sj0KnTtSpgowXyoXq4EdwS5UzBHGMatfdqWvPSQxUMV6+tY+gjYNol2lSHKZG2ugxxfYemODouiTZPr6bT6NlOVZiAYpBrvsEl9SkXeJsI0nTIzoK5osxH9NvjulyAgWTDiFmKYiNt7OxAyrwHCd90IE8TusVllXoOVFArlbBJVm8rWtdB7wIwJFUeyxVesqVQfRwDGz5VLs4EkQHNlBhLZMJdVTbIRKlrtVfavVRiV7Wdm8SyJjXOavQx8CrV+Q1eT2rtWDcHOrJCjE6t+RRyuSMcrzu6v5IJz6hqgwNanPNjpztBmmLOXoIVI1za5LpCNQ6SjXvm+usazLp3N8zjmdVcJZNTXJS7pqvzvXbselhzVdr81RpBrv+aG4tdVAQZUC+EKVwQXAdNamMgELjIjckyKyZtWmVbX5D21OQzDBucDkgWN5qJLeUciHUCrqh466+JOsP3TrW8s6yPhfLvWLqMNg4fYa91eAbrEa18zUy-KkBbqcFO6lOppo-CBJYaMhmeKMIaCQ9Mxl65oTes3KSZaDQGGiYAoyMc4NctGUSxArvivyLTJxgfqROVOfGnciC29ebHvW2Hcj9hgg+oUFM5Gn1rlpFFRJkCeXrwjZQPgBs6ZAapJxKVBhLRhOvwnlBlzAEZZ0ssAaJypzE-e1tMWW+jJJskx4A81gbkFSPJYfqdWE1gpAw5hDZ-OQ3fcpLsx7DXsOJ01XMN+RxM56c4PHTtF-BM6XwfI2FXv2-Pb0TRtQg+V6N7wxjUQGY3S9ZevwhXpxoWrAi1evGu6RCIE0Q8hNsIvDcb1DMpm2rZ0pxgpsbjy7lNq+wkcg1V1aaKRwyo0jbrjZ0iKTrqNA1lowPjisDa-OnfjsK1ziidbluvUQYq2kHr+zI1vZQe3F66ErPe48TtOFMzx9RZ1o0T0FskH7Kka1m8cme9PfV2rsm3FFspzOCHGTh1mbRvr9Hzbete+7bfH25NR91DJNz+BDZAQ3X5Ty5xU2UY-OjHVTeHXVjdd1MMBa+JVEw9-vuW-71jRl2PUzd2MDGVcCO+LeldGMOnbYTppHcgcHEF6xTbI7HbluevumCtu-SIyVtJ3EHVxN8ZvRQeQZcmO96uls2zv5OdabrPWnTcGfWvI2uDQ2tG1LoBqY2BDi+4w9BpX1K619RI-G3NqvyLbBdPOyw7-hP1k39dIAQ3WZpusJjjKdN2K4LcANvHRjixlXEnoF06ltTM8Dm5k1D282pA-N+m2acZsj979+xrVlnozvwnJbuxh-RXaf3Ombrop+6+KceucjsDdumcW9a1u17St31ivXrdPhmgJaNOoYC9dQLG3gbvJug6DcSJV2edVtpggtru1B2aA7Bu28i02uO3Sp7IUbdmfdvc3PbG8XG+vpj4E31dI+kO26b13H6jdN16ONbppFXXO7Fm8-fShs1F2hbpdvoyAcz2RLh9pILO43Bztc33GR9-O0FvWR-7kOabROwDuTu13PjCBgB6ns90-3MT2AFLXLf7FN27rGO1uyraevciX7uB7uzXs+t93lxA9ync3tlFNE29jOtizybNv0He9KD6mwCmJrNb-d69pG5vZRtk0nbM+oRjLrG3Y3urQik+77bPv+3t9c0LXTNWvtMPybBujQzHdpsX6P7Cdhm8qewAkm9HEB7KH4CAfRwQHQh0KYaYC182TTn9pO2g9GONHM9eHRg7o9Fv9HEDyOl08kzwdF7lbpe1W8Q51Rd3Nb5Dinl9aod0jfr5B2rUbaoMm3uHLD2e4Y8jAcPVkS9tg7bb4d3iHbaSoR1GYzOu2Px4jj28vqgIKXEQYh5BhIdWhSGj1AUWQ0vfkPO1FDmYZQ5Td13KOI7UdqmzXEp0RX0GsJxI0hP1mpG+zAtrnAlaSs12Gj0tliOqd27RKP6Vsm69oeaK6HEo+hq+kFIkeQF-LFhlttHGsPZHnLXlgS1bScOqajW-h8hoQ1tgImjSsRpWr4eudFhi1Dzm6TNRCONwwjERuJ9EYUCPPVtKC1o54qSOSqUj0qsZ0XZsPng7D5MhBw0dTtgGk9pRu0+XYiXm7tgm4RXD1hc1nGtWpxwwyDXaNIntHtGHo9M41b3HIlRx+x7sY+Pq5vjEAaY9cZxfuYMT6uH4k8YkR4mi7WxyKJS9JPq4srdp1UzBDw6XGZjdR24xqzcdUKVj99+Znaelv2mflizgw-8emYBmPn1zPuqCZ1IQnZYfgaEx4qMzV2vDWrIu2icFc0d1cSe8k0fnGe0ZCTgrglI7kOPZXFXAqKk29ZpNVQ009J2ujje9tHWSGbJ-10qiSaT3OnIN-k-Ia9dD2fH2WpJpKdtrMgpIw7eO67sMs6PXX+L2LU-rSsIuVcuKUA6W6iUJvs7Qe7zZzegdZ9YHub4t7bHKmO4ncRbul-bkxPjThjrrkk+dI8e56kmSjhG01ZDP23Wr292TSAc6sBn6OmThERtYEd9M8n6Z7Fvinn1XSZqCZ7FWJv4c5PUbvpr5vwaKdu3GOeZ78YWZOlj8SzEs-ARWZZUSdwJ7Km9FBIU5UCeVCV+xEMI7P6c8S3ZiFwfX7NolBzZspVRbITUTmr4mq6c5B+A-6qFzv79gciewA8C1zlq3NZues62rhBu50QfufgCHmpBbnE826sSIer-O3q5OWKXqH3nA1mc4NS+bzmZrhbmF6tVYL-PUYALppWDyBf7nRZ654a7+6VxguFk4L9XOtUhZLUoWHZfHm4z1lY8jz9SDyzj0NwSG5lCLKQybiRazL4WNsuQyi4IOrk0WKyBaupPRenslAhhzF7sp0NnJYxmwn65oYTLokOXKSp5ZocUAVp+I-5imDbafMaFnlXPTGucu5Y1OpApn+C8q6F926obfLbATCYFYFSi7Qr9A4lCpzGCOpMtT+LPDCJE2RpphQX2a7UGaGsSIA7E1lLRi4kuoeJzIm29V78qCSXUBkqAEZIC+m3WdrDsG5bc+ko1y9BKP6dwg0nVetJQI9CfxIa+-IhJz0lr0wSnuJO43Y35g19PL2qTtq3mYoCyEIY6rfJnZHCagSORMl1jKH2jAKGVMStglSCxR5vJKEuowRqzlyYiCQSIer4qz7ycVlhwB81UwS2L-Yu2clOv9ljz7dY6gd66vQiGgE1u+yX7MhnyRg2WeSO9c5glUzpt-cc50XAbLebLF9K9xc3sJcPxf5yAFZT8udpjr5D1zhddNvMrFb14x25B24c1XvxwN0rRhLxmdXY7Qb1V9QI1fuHl9+rzuEa9PbpvrX8Me175MHL2HS33r2rY2qfSUAdAb6Xo4G84J7vrkrb4Wt28Wt4jxlUPa4tU0HPYhicQk0ayvKINTyLhnUiYmFHxhpREDenEKe6LPk7ff8NdOwDrC8bEbC78d6jKG24od7fCzd8ZSBOD2GGmk-cNpIUZ6SpvFxQybN86emSCga2CP9TcJCwBbJnSByS6hV+PfRVTxV79t-3kffkGWv1AnncB8R7EQVU0PXvIWmNTlpCNtaR4A6mZT+83U5mftOSVLvaivv2TcxFJVTTzHtU4qzX6Wk+aUpIgNKRtM6kt-dprTdv+PrDNAqFK3f524nEzOQrK-OzklhTB6GTgEpI-2t2P7amN-J-zf7aa3+xVz+vT+7smsv+Eer+LpgZ1n7d741XV3pwbJr9N9enqM3-OjBSVL7Wq-S6ksAhgyM8FkaCmqGrYqCmUzleRGKTDiAGUqeVtAioK-3izRwylLLcxjue7hO5pKt-vk6JwalP77YiA-rNKNgzYMTIjYpMg575GRXiYg0B8HBCL0ysyuaKjuG9tk7YB31LgGrucAGpS8yrHODIXu5sERqasN7gJxlmUskQKsqT7rWYvunKjBLKcTZp+470-eMwIgYi5kh4GWqHuILaehnth6MkuHmHL4eEgkeYuqJHrHLyCF5p6pXmPqjeZ+qacgGrSk9HtnKMeSpIJ5QWn5pELRqJckp5xq-5hB5AWVcraopqYQmmoCezHkJ61q2ge3IFq48shYhCaFqGQYWHgd+bysMQuPJqeSQhp5GkM8pEFkWenhRYYeVFkZ59qdFpJgMWGAHvLWeF5MdxMO-niL7cWjllfKvwYlpAoS0D8iF46W4lm-JlWf3OpZHkc4D57mwOlvpbZuEzhZ6dBgrhKz2WWljxYzwj8tF7gKSVsAiReuCvMGamEAUsEsAdKNABPygplsEg8d+EuSDAZ5P+rJepiuejEodwDFYjB5LhZ52mA-O27lGoxrZYVuYyCZZgmukgEyNwQQHDbO6nRqMFm2yVnj7zO4CsqZU+5Jvl4uILeFr5V+mCvBqoaeCt0GEKLAVk5HS3vmkpwQ6NvJo0KKAX-QyMRAEwqTeHvqzJe+ZCn0wYhK-mVIbuB9mA6lOwilWzDKU7MooTKsiuxryKyKsooLK87sSFYBaId9Tkhd-mVKFORAXN4deSTjqIL6izEMG-eFypv7pwuvsyYG+xcBZ49uyIZ748hpIbUT8heAblR8GXShyxQ+MoTiFwqBSrv5IqsyjUr4oFSuiplKmKnLyqh3IWwG8hZNFqFcBJKuv5iO1IaCws0dIfdBDK7ioyFzK0iiyFqAbIeaHzKqivaHhs6ofirohmMliHbKIoWL4c6lthKFEBUoecra+soUyYbgtyqhDnW0VkqFm2+HFyFRhjoRqEKULocSq8B1igaGZhRofpQmhiKr6jshNoVaHl6FoZaF2hO7kmbRh4unyGlSLRLqHHKxTofa0hAyvSH+hEimMpBhUyjAAzKSioGGchRIaWGoh5YUuiVhcbDTTOiimomEz2-JvPZr2w4VpTphRLsG7O8NypeC0a+YWEQ6WnOoHbQ6y4R37X+ZIQOFDMeobMy1hJfrKHwq9MDRBmhC4RaFthath2FYqGAawGrhMYf2GyaLRNWEeh2IaOHKa44b6HVsA3AGFuw4ypMqsh0yi2HoRKirw5qhZYZBHOhO9jO4JhMbhZ6deiRBL6phimieEwqsofKE+2iobeEoOJYU+HsBxEbJrsgD-jWHQqhoQhH5KCKn+HNh5oaioz41oSBFdhYESiHsyRES+FcRb4UeHwRNIYhFF0yEQyFThTIZhEhh2EWGF4RbEfP5b2sYVxGxmghruHm2BymwZKRaYRZ5nKp4VmGHWuYV9oDcsJreEuOj4YZGd+FYTwZ9+8zJ+E4IVfo2HCRMTABFiR+ABJG1KUkcRzNWi7s+GahPBjxFwRRAYyZIRoipOFSmgYcyGzh84aUq4RS4ZGHsRTofJEUhxJEKE7h5EfN4HK8bjRF7WqwakB7BZypSheE33lVZ2R9EfWGQEP4YUrBROEWFGVKwEZFH4RDoRBF9hnERSHMQQ4bxEZhX4R1Fe254fuBOR9yi5EFhfwWAFheyPrT7Yc9PtZaCubjgjo-GBkVf4cRxUQKG9+7ofvYnuZ7ggECBk6CdL4uIgbgJASzKhIGPuNZjJwyB9ZnIHeAFUFrLGAagVfAVQ+yDZ53qpiG-I8QcXi0KNC1EAMEEePEAgQRwzSBtqEM8DPgDsmrKMBQoxI8IqjKogGMy5XG0sH4gHqbhgrSEMb9ET48Q2KMTGn01DGTFjIsSCTHYStEBTFv0Z9NMLgawLkYYCRf9PyAdAQoBKBiGbfn1KFRa4RwR4AsmvwSmRtUaHrjkiQJOQKE6AXtJCxnkXFEKUYsRSEtEe9spFehwhjqB6gBoK8DwyF-krFHRRUbURqxAoYOHnRWsbiLcUMYL6BV4oMFmBW+jsYjRGQIAG5JEACit6CPgKQF5C0A7AIoD2AXGLjzuwWvBbRY0gsflLKxx0WbEDhTjO+FSxsoekT3gT4C+DyxsLLhSX+LVqbGqxA4aI7bKpfjSAh2pEggRm4FwAgTj4CKBrQoo90MAAf8KAOTA-AmYHASewd4bsCpOuCN+AOoEGKXGt4VaN3HUQChHpoygr4OCC-QzfqKBDx9NIUi9xM8W+CQg+zG9C9xS8fPFyWQLmzImIlXlbQsmg+kvYJW3rEhLTszZh17esY1EMifuQwMozYMjAufEUR3gPHB3AbZsVbesSge0C3xLDvfHQ2VtF87RwO8ZDaNOeypH7Psh8UMhnBIGtgxnxdiGAlbol8d6w3xUCYAmfxHgE-E+02DK-GgJiCQ-GGitdBmBcAnwVbR5A1AHNKCaOBkrQ-xg9jfCAyRClnGxRMcbnHQRZGlyzEB72jKBOxkcQdIkhckbHE9+msSDT7WfmjKAh2M8KOBAUicCC6h66EG0ilIQiTgjwM2kr7BSJiwG4BjAQwL-4uM9krtAEMzCVAQu4CIMiCog0RJiCWAXYEMiloiyjQmcJo0X0zmx2ocxAP+uUsbHZxIsTgClSZ0bbzAM-CeWygQHgOBCqEktBiFEA9MtH5rOrKKHpBJkICTqwUzbMwFGxUcSbHOJNiVwHMQikQ4lxJTiVwn0J40WVGr02iTpCxAhsZnGOJtCTnFLoiSSyzMQ2MgnEvGILoGaKa7CcLEZJpSa4mdWz7J4mhSgifr6pI-6IxqkJVtCIlJAoDtrHfs2IIYnkAeIASASU4FL8CAa+8akkcJvYeGbcJFIWpT2J1CUUmWJiyZkkChalPnHVJtdG0ncU-MeBQlwa1P-CzJayWknFJCSaVJqU2SYYraJRySCTdJLUv0lHUoemUGWeM4ArGz+6yQsmL+TSbJoEBkKnMkNJViUsnbJlSbUnJRScR0lEAJydUqwJecBNSDJNsZAQfJsGo0AZxisZckbJ-yaLE3JvASCnRxJSfimApsER4kPJsKSPCnJWCTPivJudrKEfJe8gUnYp8yYRFgpWydqEbUwKRclspI0ZskApFIdymTSFKXnZUp8KX-BYJKCYnT34kNCinoKHyWsLfJwlBYl-JRGmUm7s+KEOFEp8SY0mkpQqVqlWxStFCm3CXMe0nAgxydwDVKanGrLnBOqekkcpgqQKEOUuyTklipFqU8nXELycinaJO8uApoBWKT8k4paqXdGHuE0niz2pVyXqkuJU7vijhpJqYnGzRYeuKlWp7bDeh0pPqdLHoSGKSylBpfKbJGOp+qc6n4oqyfUnEp1ybGmJRoqTCkepcKamnuwtKUilypvqehLMpyqb1LBp7KQKlFpXKeu48pZabqmFpMaQalssILgckN8KaTSmPxjAhmnNpWabsHFWuaSqm-JXaXinDpxaSkm8poKd2nrpvaYpGAmrSZSm1p1KdUoAAVLOmiJ2iXsGLRJVgOkOpO6Rqkc8+KISlbp5adGmPpHzA5TkpAfj8xHpcGn-FfBPqeImyhkicUjtIobmIxyJocQolgZpSG4Ajxw7OKhuYBsMcyh6eSbemxJ+aYCrqpvpno79pmGdulrpH6VcKwGibPsnaJIyRiBjJ+IMFa0ES6R2lYZE+kRm4Z+6WMyHpd6VGlDpxGc0R7sLSeRnup-6SC4SpJaCMhlocpkBkuMEib7CYQRYDImSiZBkniiZiGY3BfcQoiC43w-TlFatOnSSDR9wbkgtqKAcMK8BtxymTfDmoHCH-CJAWeIoCmZICKOx2Zr6YOkPpvpmEzbhxqWOmOZ96cxlTupxm5lJRv6QJmYpQmfWn-wslmonAM9KfKl0K6EDJmYppiApk2sm+h9KeZnGc5lTuGNvhmFJnafyneZQqR0rHucZoemBZcmY3DCZ-8BKj2AZqKPCWo4mXOkgZ0mXLDgUzehVkwACaBwjmJK6Tlk4ZU7uCqZZrKYRndZeWZLE-pSbH+lBZJDGVneA3aA0BVZ-aNgkRZmafVmhwjWcYkJZbsNNnPq1WePAdZ2WQWlpZQqfwSlpBGW+lcZvpm6EFZW7vRz7M8ZjVF8B57hAhvQ08EvAyA6cKrChIE8E9kvZfMP0gson2WwC8Y1APRBuMTEKxAiwQ1NlKA5wFF0JGo3IGBDSwm8W7BBAM+Atpuw8AdHAoZ6sPglY4FxJhCnJwyG+RboBAHUzSwwhN4BE5tQMIRLwM6GvYQhkNgjlC8igGWho5ZwNSDi0MAEiDsAxjJoCM5xKBokoZWQCHG0YiOWJmx4UKPAG5WNZL+IASogU9H3uL0dWZSc0gXJzQSVArzgAYKgSYAMSHhK8APArsF4BPkQFEvCxIxLLyCpACQOPgaAkdDXCa5kmJblYSY1LYD2A6cIepEkIIF9h25MfF5LTw39DgBDJhyW4y+5LLhgAuQ9GTipeZv4rhkICI1L7mopwFBVCh5u7qukR5PmedGJ87uerBkifGBVBwA3gLXBVwQAA"}))),r.createElement("div",{className:(0,a.A)("h-[600px]")}));var s=t(88123);function l(){return r.createElement(s.O,{hidePreview:!0,showFiles:!0,files:{"/App.tsx":{code:d.trim()},"/authProvider.ts":{code:c.trim()},"/i18n.ts":{code:u.trim()},"/context/color-mode.tsx":{code:p.trim()},"/components/header.tsx":{code:m.trim()},"/pages/categories/create.tsx":{code:A.trim()},"/pages/categories/edit.tsx":{code:v.trim()},"/pages/categories/list.tsx":{code:w.trim()},"/pages/categories/show.tsx":{code:x.trim()},"/pages/categories/types.ts":{code:k.trim()},"/pages/products/create.tsx":{code:g.trim()},"/pages/products/edit.tsx":{code:h.trim()},"/pages/products/list.tsx":{code:f.trim()},"/pages/products/show.tsx":{code:y.trim()},"/pages/products/types.ts":{code:b.trim()}}})}const d='\nimport { Authenticated, type I18nProvider, Refine } from "@refinedev/core";\nimport dataProvider from "@refinedev/simple-rest";\n\nimport routerProvider, {\n  CatchAllNavigate,\n  NavigateToResource,\n} from "@refinedev/react-router-v6";\nimport { BrowserRouter, Outlet, Route, Routes } from "react-router-dom";\n\nimport CssBaseline from "@mui/material/CssBaseline";\nimport GlobalStyles from "@mui/material/GlobalStyles";\nimport {\n  AuthPage,\n  ErrorComponent,\n  RefineSnackbarProvider,\n  ThemedLayoutV2,\n  useNotificationProvider,\n} from "@refinedev/mui";\n\nimport { useTranslation } from "react-i18next";\n\nimport { authProvider } from "./authProvider";\nimport { Header } from "./components/header";\nimport { ColorModeContextProvider } from "./contexts/color-mode";\n\nimport {\n  CategoryCreate,\n  CategoryEdit,\n  CategoryList,\n  CategoryShow,\n} from "@/pages/categories";\nimport {\n  ProductCreate,\n  ProductEdit,\n  ProductList,\n  ProductShow,\n} from "@/pages/products";\n\nfunction App() {\n  const { t, i18n } = useTranslation();\n\n  const i18nProvider: I18nProvider = {\n    translate: (key, params) => t(key, params).toString(),\n    changeLocale: (lang: string | undefined) => i18n.changeLanguage(lang),\n    getLocale: () => i18n.language,\n  };\n\n  return (\n    <BrowserRouter>\n      <ColorModeContextProvider>\n        <CssBaseline />\n        <GlobalStyles styles={{ html: { WebkitFontSmoothing: "auto" } }} />\n        <RefineSnackbarProvider>\n          <Refine\n            dataProvider={dataProvider("https://api.fake-rest.refine.dev")}\n            notificationProvider={useNotificationProvider}\n            routerProvider={routerProvider}\n            authProvider={authProvider}\n            i18nProvider={i18nProvider}\n            resources={[\n              {\n                name: "products",\n                list: "/products",\n                create: "/products/new",\n                edit: "/products/:id/edit",\n                show: "/products/:id",\n              },\n              {\n                name: "categories",\n                list: "/categories",\n                create: "/categories/new",\n                edit: "/categories/:id/edit",\n                show: "/categories/:id",\n                meta: {\n                  canDelete: true,\n                },\n              },\n            ]}\n          >\n            <Routes>\n              <Route\n                element={\n                  <Authenticated\n                    key="authenticated-inner"\n                    fallback={<CatchAllNavigate to="/login" />}\n                  >\n                    <ThemedLayoutV2 Header={() => <Header sticky />}>\n                      <Outlet />\n                    </ThemedLayoutV2>\n                  </Authenticated>\n                }\n              >\n                <Route\n                  index\n                  element={<NavigateToResource resource="products" />}\n                />\n                <Route path="/products">\n                  <Route index element={<ProductList />} />\n                  <Route path="new" element={<ProductCreate />} />\n                  <Route path=":id" element={<ProductShow />} />\n                  <Route path=":id/edit" element={<ProductEdit />} />\n                </Route>\n                <Route path="/categories">\n                  <Route index element={<CategoryList />} />\n                  <Route path="new" element={<CategoryCreate />} />\n                  <Route path=":id" element={<CategoryShow />} />\n                  <Route path=":id/edit" element={<CategoryEdit />} />\n                </Route>\n                <Route path="*" element={<ErrorComponent />} />\n              </Route>\n              <Route\n                element={\n                  <Authenticated\n                    key="authenticated-outer"\n                    fallback={<Outlet />}\n                  >\n                    <NavigateToResource />\n                  </Authenticated>\n                }\n              >\n                <Route\n                  path="/login"\n                  element={\n                    <AuthPage\n                      type="login"\n                      formProps={{\n                        defaultValues: {\n                          email: "demo@refine.dev",\n                          password: "demodemo",\n                        },\n                      }}\n                    />\n                  }\n                />\n                <Route\n                  path="/register"\n                  element={<AuthPage type="register" />}\n                />\n                <Route\n                  path="/forgot-password"\n                  element={<AuthPage type="forgotPassword" />}\n                />\n                <Route\n                  path="/update-password"\n                  element={<AuthPage type="updatePassword" />}\n                />\n              </Route>\n            </Routes>\n          </Refine>\n        </RefineSnackbarProvider>\n      </ColorModeContextProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n',c='\nimport type { AuthBindings } from "@refinedev/core";\n\nexport const TOKEN_KEY = "refine-auth";\n\nexport const authProvider: AuthBindings = {\n  login: async ({ username, email, password }) => {\n    if ((username || email) && password) {\n      localStorage.setItem(TOKEN_KEY, username);\n      return {\n        success: true,\n        redirectTo: "/",\n      };\n    }\n\n    return {\n      success: false,\n      error: {\n        name: "LoginError",\n        message: "Invalid username or password",\n      },\n    };\n  },\n  logout: async () => {\n    localStorage.removeItem(TOKEN_KEY);\n    return {\n      success: true,\n      redirectTo: "/login",\n    };\n  },\n  check: async () => {\n    const token = localStorage.getItem(TOKEN_KEY);\n    if (token) {\n      return {\n        authenticated: true,\n      };\n    }\n\n    return {\n      authenticated: false,\n      redirectTo: "/login",\n    };\n  },\n  getPermissions: async () => null,\n  getIdentity: async () => {\n    const token = localStorage.getItem(TOKEN_KEY);\n    if (token) {\n      return {\n        id: 1,\n        name: "John Doe",\n        avatar: "https://i.pravatar.cc/300",\n      };\n    }\n    return null;\n  },\n  onError: async (error) => {\n    console.error(error);\n    return { error };\n  },\n  forgotPassword: async (params) => {\n    return {\n      success: true,\n      redirectTo: "/update-password",\n      successNotification: {\n        message: "Email has been sent.",\n      },\n    };\n  },\n  updatePassword: async (params) => {\n    return {\n      success: true,\n      redirectTo: "/login",\n      successNotification: {\n        message: "Successfully updated password.",\n      },\n    };\n  },\n};\n',u='\nimport i18n from "i18next";\nimport detector from "i18next-browser-languagedetector";\nimport Backend from "i18next-xhr-backend";\nimport { initReactI18next } from "react-i18next";\n\ni18n\n  .use(Backend)\n  .use(detector)\n  .use(initReactI18next)\n  .init({\n    supportedLngs: ["en", "de"],\n    backend: {\n      loadPath: "/locales/{{lng}}/{{ns}}.json",\n    },\n    ns: ["common"],\n    defaultNS: "common",\n    fallbackLng: ["en", "de"],\n  });\n\nexport default i18n;\n',p='\nimport { ThemeProvider } from "@mui/material/styles";\nimport { RefineThemes } from "@refinedev/mui";\nimport type React from "react";\nimport {\n  type PropsWithChildren,\n  createContext,\n  useEffect,\n  useState,\n} from "react";\n\ntype ColorModeContextType = {\n  mode: string;\n  setMode: () => void;\n};\n\nexport const ColorModeContext = createContext<ColorModeContextType>(\n  {} as ColorModeContextType,\n);\n\nexport const ColorModeContextProvider: React.FC<PropsWithChildren> = ({\n  children,\n}) => {\n  const colorModeFromLocalStorage = localStorage.getItem("colorMode");\n  const isSystemPreferenceDark = window?.matchMedia(\n    "(prefers-color-scheme: dark)",\n  ).matches;\n\n  const systemPreference = isSystemPreferenceDark ? "dark" : "light";\n  const [mode, setMode] = useState(\n    colorModeFromLocalStorage || systemPreference,\n  );\n\n  useEffect(() => {\n    window.localStorage.setItem("colorMode", mode);\n  }, [mode]);\n\n  const setColorMode = () => {\n    if (mode === "light") {\n      setMode("dark");\n    } else {\n      setMode("light");\n    }\n  };\n\n  return (\n    <ColorModeContext.Provider\n      value={{\n        setMode: setColorMode,\n        mode,\n      }}\n    >\n      <ThemeProvider\n        // you can change the theme colors here. example: mode === "light" ? RefineThemes.Magenta : RefineThemes.MagentaDark\n        theme={mode === "light" ? RefineThemes.Blue : RefineThemes.BlueDark}\n      >\n        {children}\n      </ThemeProvider>\n    </ColorModeContext.Provider>\n  );\n};\n'.trim(),m='\nimport DarkModeOutlined from "@mui/icons-material/DarkModeOutlined";\nimport LightModeOutlined from "@mui/icons-material/LightModeOutlined";\nimport { FormControl, MenuItem, Select } from "@mui/material";\nimport AppBar from "@mui/material/AppBar";\nimport Avatar from "@mui/material/Avatar";\nimport IconButton from "@mui/material/IconButton";\nimport Stack from "@mui/material/Stack";\nimport Toolbar from "@mui/material/Toolbar";\nimport Typography from "@mui/material/Typography";\nimport { useGetIdentity, useGetLocale, useSetLocale } from "@refinedev/core";\nimport {\n  HamburgerMenu,\n  type RefineThemedLayoutV2HeaderProps,\n} from "@refinedev/mui";\nimport i18n from "i18next";\nimport type React from "react";\nimport { useContext } from "react";\nimport { ColorModeContext } from "../../contexts/color-mode";\n\ntype IUser = {\n  id: number;\n  name: string;\n  avatar: string;\n};\n\nexport const Header: React.FC<RefineThemedLayoutV2HeaderProps> = ({\n  sticky = true,\n}) => {\n  const { mode, setMode } = useContext(ColorModeContext);\n\n  const { data: user } = useGetIdentity<IUser>();\n\n  const changeLanguage = useSetLocale();\n  const locale = useGetLocale();\n  const currentLocale = locale();\n\n  return (\n    <AppBar position={sticky ? "sticky" : "relative"}>\n      <Toolbar>\n        <Stack\n          direction="row"\n          width="100%"\n          justifyContent="flex-end"\n          alignItems="center"\n        >\n          <HamburgerMenu />\n          <Stack\n            direction="row"\n            width="100%"\n            justifyContent="flex-end"\n            alignItems="center"\n          >\n            <FormControl sx={{ minWidth: 64 }}>\n              <Select\n                disableUnderline\n                defaultValue={currentLocale}\n                inputProps={{ "aria-label": "Without label" }}\n                variant="standard"\n                sx={{\n                  color: "inherit",\n                  "& .MuiSvgIcon-root": {\n                    color: "inherit",\n                  },\n                  "& .MuiStack-root > .MuiTypography-root": {\n                    display: {\n                      xs: "none",\n                      sm: "block",\n                    },\n                  },\n                }}\n              >\n                {[...(i18n.languages ?? [])].sort().map((lang: string) => (\n                  <MenuItem\n                    selected={currentLocale === lang}\n                    key={lang}\n                    defaultValue={lang}\n                    onClick={() => {\n                      changeLanguage(lang);\n                    }}\n                    value={lang}\n                  >\n                    <Stack\n                      direction="row"\n                      alignItems="center"\n                      justifyContent="center"\n                    >\n                      <Avatar\n                        sx={{\n                          width: "24px",\n                          height: "24px",\n                          marginRight: "5px",\n                        }}\n                        src={`/images/flags/${lang}.svg`}\n                      />\n                    </Stack>\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <IconButton\n              color="inherit"\n              onClick={() => {\n                setMode();\n              }}\n            >\n              {mode === "dark" ? <LightModeOutlined /> : <DarkModeOutlined />}\n            </IconButton>\n\n            {(user?.avatar || user?.name) && (\n              <Stack\n                direction="row"\n                gap="16px"\n                alignItems="center"\n                justifyContent="center"\n              >\n                {user?.name && (\n                  <Typography\n                    sx={{\n                      display: {\n                        xs: "none",\n                        sm: "inline-block",\n                      },\n                    }}\n                    variant="subtitle2"\n                  >\n                    {user?.name}\n                  </Typography>\n                )}\n                <Avatar src={user?.avatar} alt={user?.name} />\n              </Stack>\n            )}\n          </Stack>\n        </Stack>\n      </Toolbar>\n    </AppBar>\n  );\n};\n',g='\nimport { type HttpError, useTranslate } from "@refinedev/core";\nimport { useForm } from "@refinedev/react-hook-form";\nimport { Controller } from "react-hook-form";\n\nimport { Autocomplete, Box, TextField } from "@mui/material";\nimport { Create, useAutocomplete } from "@refinedev/mui";\nimport type { Product } from "./types";\n\nexport const ProductCreate: React.FC = () => {\n  const translate = useTranslate();\n  const {\n    saveButtonProps,\n    refineCore: { formLoading },\n    register,\n    control,\n    formState: { errors },\n  } = useForm<Product, HttpError, Product>();\n\n  const { autocompleteProps: categoryAutocompleteProps } = useAutocomplete({\n    resource: "categories",\n  });\n\n  return (\n    <Create isLoading={formLoading} saveButtonProps={saveButtonProps}>\n      <Box\n        component="form"\n        sx={{ display: "flex", flexDirection: "column" }}\n        autoComplete="off"\n      >\n        <TextField\n          {...register("name", {\n            required: translate("form.required"),\n          })}\n          error={!!errors?.name}\n          helperText={<>{errors?.name?.message}</>}\n          margin="normal"\n          fullWidth\n          InputLabelProps={{ shrink: true }}\n          type="text"\n          label={translate("products.fields.name")}\n          name="name"\n        />\n        <TextField\n          {...register("description", {\n            required: translate("form.required"),\n          })}\n          error={!!errors?.description}\n          helperText={<>{errors?.description?.message}</>}\n          margin="normal"\n          fullWidth\n          InputLabelProps={{ shrink: true }}\n          multiline\n          label={translate("products.fields.description")}\n          name="description"\n        />\n        <TextField\n          {...register("price", {\n            required: translate("form.required"),\n            min: 0.1,\n            valueAsNumber: true,\n          })}\n          error={!!errors?.price}\n          helperText={<>{errors?.price?.message}</>}\n          margin="normal"\n          fullWidth\n          InputLabelProps={{ shrink: true }}\n          type="number"\n          label={translate("products.fields.price")}\n          name="price"\n        />\n        <TextField\n          {...register("material", {\n            required: translate("form.required"),\n          })}\n          error={!!errors?.material}\n          helperText={<>{errors?.material?.message}</>}\n          margin="normal"\n          fullWidth\n          InputLabelProps={{ shrink: true }}\n          type="text"\n          label={translate("products.fields.material")}\n          name="material"\n        />\n        <Controller\n          control={control}\n          name="category"\n          rules={{ required: translate("form.required") }}\n          render={({ field }) => (\n            <Autocomplete\n              {...categoryAutocompleteProps}\n              {...field}\n              onChange={(_, value) => {\n                field.onChange(value);\n              }}\n              getOptionLabel={(item) => {\n                return (\n                  categoryAutocompleteProps?.options?.find(\n                    (p) => p?.id?.toString() === item?.id?.toString(),\n                  )?.title ?? ""\n                );\n              }}\n              isOptionEqualToValue={(option, value) => option?.id === value?.id}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label={translate("products.fields.category")}\n                  margin="normal"\n                  variant="outlined"\n                  error={!!errors?.category}\n                  helperText={<>{errors?.category?.message}</>}\n                  required\n                />\n              )}\n            />\n          )}\n        />\n      </Box>\n    </Create>\n  );\n};\n',h='\nimport {\n  type HttpError,\n  useTranslate,\n} from "@refinedev/core";\nimport { useForm } from "@refinedev/react-hook-form";\nimport { Controller } from "react-hook-form";\n\nimport { Autocomplete, Box, TextField } from "@mui/material";\nimport { Edit, useAutocomplete } from "@refinedev/mui";\nimport type { Product } from "./types";\n\nexport const ProductEdit = () => {\n  const translate = useTranslate();\n  const {\n    saveButtonProps,\n    refineCore: { query, formLoading },\n    register,\n    control,\n    formState: { errors },\n  } = useForm<Product, HttpError, Product>();\n\n  const productsData = query?.data?.data;\n\n  const { autocompleteProps: categoryAutocompleteProps } = useAutocomplete({\n    resource: "categories",\n    defaultValue: productsData?.category?.id,\n  });\n\n  return (\n    <Edit isLoading={formLoading} saveButtonProps={saveButtonProps}>\n      <Box\n        component="form"\n        sx={{ display: "flex", flexDirection: "column" }}\n        autoComplete="off"\n      >\n        <TextField\n          {...register("id", { valueAsNumber: true })}\n          margin="normal"\n          fullWidth\n          InputLabelProps={{ shrink: true }}\n          type="number"\n          label={translate("products.fields.id")}\n          name="id"\n          disabled\n        />\n        <TextField\n          {...register("name", {\n            required: translate("form.required"),\n          })}\n          error={!!errors?.name}\n          helperText={<>{errors?.name?.message}</>}\n          margin="normal"\n          fullWidth\n          InputLabelProps={{ shrink: true }}\n          type="text"\n          label={translate("products.fields.name")}\n          name="name"\n        />\n        <TextField\n          {...register("description", {\n            required: translate("form.required"),\n          })}\n          error={!!errors?.description}\n          helperText={<>{errors?.description?.message}</>}\n          margin="normal"\n          fullWidth\n          InputLabelProps={{ shrink: true }}\n          multiline\n          label={translate("products.fields.description")}\n          name="description"\n        />\n        <TextField\n          {...register("price", {\n            required: translate("form.required"),\n            valueAsNumber: true,\n          })}\n          error={!!errors?.price}\n          helperText={<>{errors?.price?.message}</>}\n          margin="normal"\n          fullWidth\n          InputLabelProps={{ shrink: true }}\n          type="number"\n          label={translate("products.fields.price")}\n          name="price"\n        />\n        <TextField\n          {...register("material", {\n            required: translate("form.required"),\n          })}\n          error={!!errors?.material}\n          helperText={<>{errors?.material?.message}</>}\n          margin="normal"\n          fullWidth\n          InputLabelProps={{ shrink: true }}\n          type="text"\n          label={translate("products.fields.material")}\n          name="material"\n        />\n        <Controller\n          control={control}\n          name="category"\n          rules={{ required: translate("form.required") }}\n          defaultValue={productsData?.category ?? null}\n          render={({ field }) => (\n            <Autocomplete\n              {...categoryAutocompleteProps}\n              {...field}\n              onChange={(_, value) => {\n                field.onChange(value);\n              }}\n              getOptionLabel={(item) => {\n                return (\n                  categoryAutocompleteProps?.options?.find(\n                    (p) => p?.id?.toString() === item?.id?.toString(),\n                  )?.title ?? ""\n                );\n              }}\n              isOptionEqualToValue={(option, value) => option?.id === value?.id}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label={translate("products.fields.category")}\n                  margin="normal"\n                  variant="outlined"\n                  error={!!errors?.category?.id}\n                  helperText={errors?.category?.id?.message}\n                  required\n                />\n              )}\n            />\n          )}\n        />\n      </Box>\n    </Edit>\n  );\n};\n',f='\nimport { useMemo } from "react";\n\nimport {\n  useGetLocale,\n  useList,\n  useTranslate,\n} from "@refinedev/core";\n\nimport { DataGrid, type GridColDef } from "@mui/x-data-grid";\nimport {\n  DeleteButton,\n  EditButton,\n  List,\n  NumberField,\n  ShowButton,\n  useDataGrid,\n} from "@refinedev/mui";\n\nexport const ProductList = () => {\n  const { dataGridProps } = useDataGrid();\n\n  const locale = useGetLocale()();\n\n  const translate = useTranslate();\n\n  const { data: categoryData, isLoading: categoryLoading } = useList({\n    resource: "categories",\n    pagination: {\n      mode: "off",\n    },\n  });\n\n  const columns = useMemo<GridColDef[]>(\n    () => [\n      {\n        field: "name",\n        flex: 1,\n        headerName: translate("products.fields.name"),\n        minWidth: 300,\n      },\n      {\n        field: "category",\n        flex: 1,\n        headerName: translate("products.fields.category"),\n        minWidth: 200,\n        valueGetter: ({ row }) => {\n          const value = row?.category;\n          return value;\n        },\n        renderCell: function render({ value }) {\n          return categoryLoading ? (\n            <>{translate("loading")}</>\n          ) : (\n            categoryData?.data?.find((item) => item.id === value?.id)?.title ??\n              null\n          );\n        },\n      },\n      {\n        field: "price",\n        flex: 1,\n        headerName: translate("products.fields.price"),\n        minWidth: 100,\n        maxWidth: 150,\n        renderCell: ({ value }) => {\n          return (\n            <NumberField\n              value={value}\n              locale={locale}\n              options={{ style: "currency", currency: "USD" }}\n            />\n          );\n        },\n      },\n      {\n        field: "actions",\n        headerName: translate("table.actions"),\n        sortable: false,\n        renderCell: function render({ row }) {\n          return (\n            <>\n              <ShowButton hideText recordItemId={row.id} />\n              <EditButton hideText recordItemId={row.id} />\n              <DeleteButton hideText recordItemId={row.id} />\n            </>\n          );\n        },\n        align: "center",\n        headerAlign: "center",\n        minWidth: 80,\n      },\n    ],\n    [categoryLoading, categoryData, locale, translate],\n  );\n\n  return (\n    <List>\n      <DataGrid {...dataGridProps} columns={columns} autoHeight />\n    </List>\n  );\n};\n',y='\nimport { useOne, useShow, useTranslate } from "@refinedev/core";\n\nimport Skeleton from "@mui/material/Skeleton";\nimport Stack from "@mui/material/Stack";\nimport Typography from "@mui/material/Typography";\n\nimport {\n  NumberField,\n  Show,\n  TextFieldComponent as TextField,\n} from "@refinedev/mui";\nimport type { Product } from "./types";\n\nexport const ProductShow: React.FC = () => {\n  const translate = useTranslate();\n  const {\n    query: { data: productResult, isLoading },\n  } = useShow<Product>();\n\n  const product = productResult?.data;\n\n  const {\n    data: categoryData,\n    isLoading: categoryLoading,\n    isError: categoryError,\n  } = useOne({\n    resource: "categories",\n    id: product?.category?.id,\n    queryOptions: {\n      enabled: !!product?.category?.id,\n    },\n  });\n\n  return (\n    <Show isLoading={isLoading}>\n      <Stack gap={1}>\n        <Typography variant="body1" fontWeight="bold">\n          {translate("products.fields.id")}\n        </Typography>\n        {product ? (\n          <NumberField value={product.id} />\n        ) : (\n          <Skeleton height="20px" width="200px" />\n        )}\n        <Typography variant="body1" fontWeight="bold">\n          {translate("products.fields.name")}\n        </Typography>\n        {product ? (\n          <TextField value={product.name} />\n        ) : (\n          <Skeleton height="20px" width="200px" />\n        )}\n        <Typography variant="body1" fontWeight="bold">\n          {translate("products.fields.description")}\n        </Typography>\n        {product ? (\n          <TextField value={product.description} />\n        ) : (\n          <Skeleton height="20px" width="200px" />\n        )}\n        <Typography variant="body1" fontWeight="bold">\n          {translate("products.fields.price")}\n        </Typography>\n        {product ? (\n          <NumberField value={product.price} />\n        ) : (\n          <Skeleton height="20px" width="200px" />\n        )}\n        <Typography variant="body1" fontWeight="bold">\n          {translate("products.fields.material")}\n        </Typography>\n        {product ? (\n          <TextField value={product.material} />\n        ) : (\n          <Skeleton height="20px" width="200px" />\n        )}\n        <Typography variant="body1" fontWeight="bold">\n          {translate("products.fields.category")}\n        </Typography>\n        {categoryError ? null : categoryLoading ? (\n          <Skeleton height="20px" width="200px" />\n        ) : (\n          <TextField value={categoryData?.data?.title} />\n        )}\n      </Stack>\n    </Show>\n  );\n};\n',b="\nexport interface Product {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  material: string;\n  category?: {\n    id: string;\n  } | null;\n}\n",A='\nimport { type HttpError, useTranslate } from "@refinedev/core";\nimport { useForm } from "@refinedev/react-hook-form";\n\nimport { Box, TextField } from "@mui/material";\nimport { Create } from "@refinedev/mui";\n\nimport type { Category } from "./types";\n\nexport const CategoryCreate: React.FC = () => {\n  const translate = useTranslate();\n  const {\n    saveButtonProps,\n    refineCore: { formLoading },\n    register,\n    formState: { errors },\n  } = useForm<Category, HttpError, Category>();\n\n  return (\n    <Create isLoading={formLoading} saveButtonProps={saveButtonProps}>\n      <Box\n        component="form"\n        sx={{ display: "flex", flexDirection: "column" }}\n        autoComplete="off"\n      >\n        <TextField\n          {...register("title", {\n            required: translate("form.required"),\n          })}\n          error={!!errors?.title}\n          helperText={<>{errors?.title?.message}</>}\n          margin="normal"\n          fullWidth\n          InputLabelProps={{ shrink: true }}\n          type="text"\n          label={translate("categories.fields.title")}\n          name="title"\n        />\n      </Box>\n    </Create>\n  );\n};\n',v='\nimport { type HttpError, useTranslate } from "@refinedev/core";\nimport { useForm } from "@refinedev/react-hook-form";\n\nimport { Box, TextField } from "@mui/material";\nimport { Edit } from "@refinedev/mui";\n\nimport type { Category } from "./types";\n\nexport const CategoryEdit: React.FC = () => {\n  const translate = useTranslate();\n\n  const {\n    saveButtonProps,\n    register,\n    formState: { errors },\n  } = useForm<Category, HttpError, Category>();\n\n  return (\n    <Edit saveButtonProps={saveButtonProps}>\n      <Box\n        component="form"\n        sx={{ display: "flex", flexDirection: "column" }}\n        autoComplete="off"\n      >\n        <TextField\n          {...register("id", { valueAsNumber: true })}\n          margin="normal"\n          fullWidth\n          InputLabelProps={{ shrink: true }}\n          type="number"\n          label={translate("categories.fields.id")}\n          name="id"\n          disabled\n        />\n        <TextField\n          {...register("title", {\n            required: translate("form.required"),\n          })}\n          error={!!errors?.title}\n          helperText={<>{errors?.title?.message}</>}\n          margin="normal"\n          fullWidth\n          InputLabelProps={{ shrink: true }}\n          type="text"\n          label={translate("categories.fields.title")}\n          name="title"\n        />\n      </Box>\n    </Edit>\n  );\n};\n',w='\nimport { useMemo } from "react";\n\nimport { useTranslate } from "@refinedev/core";\n\nimport { DataGrid, type GridColDef } from "@mui/x-data-grid";\nimport {\n  DeleteButton,\n  EditButton,\n  List,\n  ShowButton,\n  useDataGrid,\n} from "@refinedev/mui";\n\nexport const CategoryList: React.FC = () => {\n  const translate = useTranslate();\n  const { dataGridProps } = useDataGrid();\n\n  const columns = useMemo<GridColDef[]>(\n    () => [\n      {\n        field: "title",\n        flex: 1,\n        headerName: translate("categories.fields.title"),\n        minWidth: 200,\n      },\n      {\n        field: "actions",\n        headerName: translate("table.actions"),\n        sortable: false,\n        renderCell: function render({ row }) {\n          return (\n            <>\n              <ShowButton hideText recordItemId={row.id} />\n              <EditButton hideText recordItemId={row.id} />\n              <DeleteButton hideText recordItemId={row.id} />\n            </>\n          );\n        },\n        align: "center",\n        headerAlign: "center",\n        minWidth: 80,\n      },\n    ],\n    [translate],\n  );\n\n  return (\n    <List>\n      <DataGrid {...dataGridProps} columns={columns} autoHeight />\n    </List>\n  );\n};\n',x='\nimport {\n  useShow,\n  useTranslate,\n} from "@refinedev/core";\n\nimport Skeleton from "@mui/material/Skeleton";\nimport Stack from "@mui/material/Stack";\nimport Typography from "@mui/material/Typography";\n\nimport {\n  NumberField,\n  Show,\n  TextFieldComponent as TextField,\n} from "@refinedev/mui";\nimport type { Category } from "./types";\n\nexport const CategoryShow = () => {\n  const translate = useTranslate();\n  const {\n    query: { data: categoryResult, isLoading },\n  } = useShow<Category>();\n\n  const category = categoryResult?.data;\n\n  return (\n    <Show isLoading={isLoading}>\n      <Stack gap={1}>\n        <Typography variant="body1" fontWeight="bold">\n          {translate("categories.fields.id")}\n        </Typography>\n        {category ? (\n          <NumberField value={category?.id ?? ""} />\n        ) : (\n          <Skeleton height="20px" width="200px" />\n        )}\n        <Typography variant="body1" fontWeight="bold">\n          {translate("categories.fields.title")}\n        </Typography>\n        {category ? (\n          <TextField value={category?.title} />\n        ) : (\n          <Skeleton height="20px" width="200px" />\n        )}\n      </Stack>\n    </Show>\n  );\n};\n',k="\nexport interface Category {\n  id: string;\n  title: string;\n}\n";function C(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function S(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})),e}function E(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}const B={title:"Overview",slug:"/",displayed_sidebar:"mainSidebar"},R=void 0,T={unversionedId:"getting-started/overview",id:"getting-started/overview",title:"Overview",description:"What is Refine?",source:"@site/docs/getting-started/overview.md",sourceDirName:"getting-started",slug:"/",permalink:"/docs/",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/master/documentation/docs/getting-started/overview.md",tags:[],version:"current",lastUpdatedBy:"Luscha",lastUpdatedAt:1755601825,formattedLastUpdatedAt:"Aug 19, 2025",frontMatter:{title:"Overview",slug:"/",displayed_sidebar:"mainSidebar"},sidebar:"mainSidebar",next:{title:"Quick Start Guide",permalink:"/docs/getting-started/quickstart"}},O={},F=[{value:"What is Refine?",id:"what-is-refine",level:2},{value:"Why Refine?",id:"why-refine",level:2},{value:"Overview of the Refine structure",id:"overview-of-the-refine-structure",level:2},{value:"Use cases",id:"use-cases",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Community",id:"community",level:2},{value:"Next Steps",id:"next-steps",level:2}],I=(N="DocThumbsUpDownFeedbackWidget",function(e){return console.warn("Component "+N+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.yg)("div",e)});var N;const D={toc:F},P="wrapper";function L(e){var{components:n}=e,t=E(e,["components"]);return(0,o.yg)(P,S(function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},r=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),r.forEach((function(n){C(e,n,t[n])}))}return e}({},D,t),{components:n,mdxType:"MDXLayout"}),(0,o.yg)("h2",{id:"what-is-refine"},"What is Refine?"),(0,o.yg)(I,{id:"what-is-refine",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Refine")," is a React meta-framework for CRUD-heavy web applications. It addresses a wide range of enterprise use cases including internal tools, admin panels, dashboards and B2B apps."),(0,o.yg)("p",null,"Refine's core hooks and components streamline the development process by offering industry-standard solutions for crucial aspects of a project, including ",(0,o.yg)("strong",{parentName:"p"},"authentication"),", ",(0,o.yg)("strong",{parentName:"p"},"access control"),", ",(0,o.yg)("strong",{parentName:"p"},"routing"),", ",(0,o.yg)("strong",{parentName:"p"},"networking"),", ",(0,o.yg)("strong",{parentName:"p"},"state management"),", and ",(0,o.yg)("strong",{parentName:"p"},"i18n"),"."),(0,o.yg)("p",null,"Refine's headless architecture enables the building of highly customizable applications by decoupling business logic from UI and routing. This allows integration with:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},"Any custom designs or UI frameworks like ",(0,o.yg)("a",{parentName:"p",href:"https://tailwindcss.com/"},"TailwindCSS"),", along with built-in support for ",(0,o.yg)("a",{parentName:"p",href:"https://ant.design/"},"Ant Design"),", ",(0,o.yg)("a",{parentName:"p",href:"https://mui.com/material-ui/getting-started/overview/"},"Material UI"),", ",(0,o.yg)("a",{parentName:"p",href:"https://mantine.dev/"},"Mantine"),", and ",(0,o.yg)("a",{parentName:"p",href:"https://chakra-ui.com/"},"Chakra UI"),".")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},"Various platforms, including Next.js, Remix, React Native, Electron, etc., by a simple routing interface without the need for additional setup steps.")))),(0,o.yg)("h2",{id:"why-refine"},"Why Refine?"),(0,o.yg)(I,{id:"why-refine",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,"Within the broad spectrum of development approaches, Refine occupies a unique sweet spot between \u201cstarting from scratch\u201d with traditional development method and low-code/no-code solutions. With their respective initial pros at the beginning of development, both of the two extreme approaches may present long-term risks:"),(0,o.yg)("p",null,"Despite offering the ultimate level flexibility, \u201cStarting from scratch\u201d method is likely to cause"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Project delays"),(0,o.yg)("li",{parentName:"ul"},"Technical debt"),(0,o.yg)("li",{parentName:"ul"},"Maintenance problems"),(0,o.yg)("li",{parentName:"ul"},"Lack of development and security best practices"),(0,o.yg)("li",{parentName:"ul"},"A polluted codebase"),(0,o.yg)("li",{parentName:"ul"},"And lack of standardization across teams")),(0,o.yg)("p",null,"Low/no-code solutions address this shortcoming but create a new set of challenges such as"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Vendor lock-in"),(0,o.yg)("li",{parentName:"ul"},"Lack of customization & styling options"),(0,o.yg)("li",{parentName:"ul"},"Poor developer experience"),(0,o.yg)("li",{parentName:"ul"},"And limited support for complex use-cases")),(0,o.yg)("p",null,"Offering the best from both worlds, Refine mitigates all risks of \u201cfrom scratch\u201d development without compromising from flexibility, agility and open technologies.")),(0,o.yg)("h2",{id:"overview-of-the-refine-structure"},"Overview of the Refine structure"),(0,o.yg)(I,{id:"overview-of-the-refine-structure",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)(i,{mdxType:"MUIExample"}),(0,o.yg)("br",null),(0,o.yg)(l,{mdxType:"MUISandpack"})),(0,o.yg)("h2",{id:"use-cases"},"Use cases"),(0,o.yg)(I,{id:"use-cases",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Refine")," shines when it comes to ",(0,o.yg)("em",{parentName:"p"},"data-intensive")," applications like ",(0,o.yg)("em",{parentName:"p"},"admin panels"),", ",(0,o.yg)("em",{parentName:"p"},"dashboards")," and ",(0,o.yg)("em",{parentName:"p"},"internal tools"),"."),(0,o.yg)("a",{href:"https://refine.dev/templates/"},(0,o.yg)("img",{src:"https://refine.ams3.cdn.digitaloceanspaces.com/website/static/img/diagram-3.png",alt:"Refine diagram"}))),(0,o.yg)("h2",{id:"key-features"},"Key Features"),(0,o.yg)(I,{id:"key-features",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Refine Devtools - dive deeper into your app and provide useful insights"),(0,o.yg)("li",{parentName:"ul"},"Connectors for ",(0,o.yg)("strong",{parentName:"li"},"15+ backend services")," including ",(0,o.yg)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/simple-rest"},"REST API"),", ",(0,o.yg)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/graphql"},"GraphQL"),", ",(0,o.yg)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/nestjsx-crud"},"NestJs CRUD"),", ",(0,o.yg)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/airtable"},"Airtable"),", ",(0,o.yg)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/strapi"},"Strapi"),", ",(0,o.yg)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/strapi-v4"},"Strapi v4"),", ",(0,o.yg)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/supabase"},"Supabase"),", ",(0,o.yg)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/hasura"},"Hasura"),", ",(0,o.yg)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/appwrite"},"Appwrite"),", ",(0,o.yg)("a",{parentName:"li",href:"https://firebase.google.com/"},"Firebase"),", ",(0,o.yg)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/packages/nestjs-query"},"Nestjs-Query")," and ",(0,o.yg)("a",{parentName:"li",href:"https://directus.io/"},"Directus"),"."),(0,o.yg)("li",{parentName:"ul"},"SSR support with Next.js & Remix and Advanced routing with any router library of your choice"),(0,o.yg)("li",{parentName:"ul"},"Auto-generation of CRUD UIs based on your API data structure"),(0,o.yg)("li",{parentName:"ul"},"Perfect state management & mutations with React Query"),(0,o.yg)("li",{parentName:"ul"},"Providers for seamless authentication and access control flows"),(0,o.yg)("li",{parentName:"ul"},"Out-of-the-box support for live / real-time applications"),(0,o.yg)("li",{parentName:"ul"},"Easy audit logs & document versioning"))),(0,o.yg)("h2",{id:"community"},"Community"),(0,o.yg)(I,{id:"community",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Refine")," has a very friendly community and we are always happy to help you get started:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://s.refine.dev/enterprise"},"\ud83c\udf1f Apply for the Priority support program!")," You can apply to priority support program and receive assistance from the Refine ",(0,o.yg)("strong",{parentName:"li"},"core")," team in your ",(0,o.yg)("strong",{parentName:"li"},"private")," channel."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://discord.gg/refine"},"Join the Discord community!")," It is the easiest way to get help and ask questions to the community."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://github.com/refinedev/refine/discussions"},"Join the GitHub Discussions")," to ask anything about the Refine project or give feedback; we would love to hear your thoughts!"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"/docs/guides-concepts/contributing/"},"Learn how to contribute to the Refine!")))),(0,o.yg)("h2",{id:"next-steps"},"Next Steps"),(0,o.yg)(I,{id:"next-steps",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,"\ud83d\udc49 Continue with the ",(0,o.yg)("a",{parentName:"p",href:"/docs/getting-started/quickstart/"},"Quickstart guide")," to setup and run your first ",(0,o.yg)("strong",{parentName:"p"},"Refine")," project."),(0,o.yg)("p",null,"\ud83d\udc49 Jump directly to the ",(0,o.yg)("a",{parentName:"p",href:"/tutorial"},"Tutorial")," to learn Refine by building a full-blown CRUD application.")))}L.isMDXComponent=!0}}]);