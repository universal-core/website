"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[51466],{58860:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>g});var a=t(37953);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(t),d=r,g=c["".concat(s,".").concat(d)]||c[d]||m[d]||i;return t?a.createElement(g,o(o({ref:n},u),{},{components:t})):a.createElement(g,o({ref:n},u))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},72334:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>s,default:()=>f,frontMatter:()=>l,metadata:()=>p,toc:()=>c});t(37953);var a=t(58860);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})),e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}const l={title:"Wiki Data Generation",displayed_sidebar:"mainSidebar"},s="Wiki Data",p={unversionedId:"wiki/data-generation",id:"wiki/data-generation",title:"Wiki Data Generation",description:"This section explains the functionality of the Wiki Data pipeline, which loads game settings data from various sources (e.g., prototypes, quests, configurations) and generates static assets for the wiki. These assets are saved in the locale/[localization]/wiki directory and can be customized via .devops/wiki_builder/config.py.",source:"@site/docs/wiki/data-generation.md",sourceDirName:"wiki",slug:"/wiki/data-generation",permalink:"/docs/wiki/data-generation",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/master/documentation/docs/wiki/data-generation.md",tags:[],version:"current",lastUpdatedBy:"Matteo Roggia",lastUpdatedAt:1741814802,formattedLastUpdatedAt:"Mar 12, 2025",frontMatter:{title:"Wiki Data Generation",displayed_sidebar:"mainSidebar"},sidebar:"mainSidebar",previous:{title:"Wiki Url Format",permalink:"/docs/wiki/url"},next:{title:"General Concepts",permalink:"/docs/guides-concepts/general-concepts/"}},u={},c=[{value:"Output Files",id:"output-files",level:3},{value:"File Formats",id:"file-formats",level:3},{value:"<code>items.json</code>",id:"itemsjson",level:4},{value:"<code>mobs.json</code>",id:"mobsjson",level:4},{value:"Editable Files",id:"editable-files",level:3},{value:"Running the Pipeline",id:"running-the-pipeline",level:2},{value:"Setup Environment",id:"setup-environment",level:3},{value:"Running the Script",id:"running-the-script",level:3},{value:"Freeze Dependencies",id:"freeze-dependencies",level:3}],m=(d="DocThumbsUpDownFeedbackWidget",function(e){return console.warn("Component "+d+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.yg)("div",e)});var d;const g={toc:c},y="wrapper";function f(e){var{components:n}=e,t=o(e,["components"]);return(0,a.yg)(y,i(function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},a=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),a.forEach((function(n){r(e,n,t[n])}))}return e}({},g,t),{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"wiki-data"},"Wiki Data"),(0,a.yg)("p",null,"This section explains the functionality of the Wiki Data pipeline, which loads game settings data from various sources (e.g., prototypes, quests, configurations) and generates static assets for the wiki. These assets are saved in the ",(0,a.yg)("inlineCode",{parentName:"p"},"locale/[localization]/wiki")," directory and can be customized via ",(0,a.yg)("inlineCode",{parentName:"p"},".devops/wiki_builder/config.py"),"."),(0,a.yg)("hr",null),(0,a.yg)("h3",{id:"output-files"},"Output Files"),(0,a.yg)(m,{id:"output-files",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,"The pipeline generates the following static files:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"items.json")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"mobs.json")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"refine_trees.json")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"refine_sets.json")))),(0,a.yg)("h3",{id:"file-formats"},"File Formats"),(0,a.yg)("h4",{id:"itemsjson"},(0,a.yg)("inlineCode",{parentName:"h4"},"items.json")),(0,a.yg)(m,{id:"itemsjson",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "vnum": {\n        "base_vnum": vnum1,\n        "refine_count": count,\n        "refine": [\n            {\n                "to": vnum,\n                "npc": npc,\n                "type": "normal",\n                "set": {\n                    "flag": flag,\n                    "cost": cost,\n                    "cost2": cost2,\n                    "items": [\n                        {\n                            "vnum": vnum,\n                            "count": count,\n                            "flag": flag,\n                            "argument": argument\n                        }\n                    ]\n                }\n            }\n        ],\n        "refine_tree": [\n            # positional per up\n            [\n                {\n                    "to": vnum,\n                    "npc": npc,\n                    "type": "normal",\n                    "set": {\n                        "flag": flag,\n                        "cost": cost,\n                        "cost2": cost2,\n                        "items": [\n                            {\n                                "vnum": vnum,\n                                "count": count,\n                                "flag": flag,\n                                "argument": argument\n                            }\n                        ]\n                    }\n                }\n            ]\n        ],\n        "refine_epicization": [\n            {\n                "to": vnum,\n                "npc": npc,\n                "type": "normal",\n                "set": {\n                    "flag": flag,\n                    "cost": cost,\n                    "cost2": cost2,\n                    "items": [\n                        {\n                            "vnum": vnum,\n                            "count": count,\n                            "flag": flag,\n                            "argument": argument\n                        }\n                    ]\n                }\n            }\n        ],\n        "refine_material": [item1, item2],\n        "crafted": [\n            {\n                "npc": npc,\n                "result": vnum,\n                "gold": 100,\n                "improve": {\n                    "vnum": vnum,\n                    "count": 20,\n                    "pct": 90\n                },\n                "materials": [\n                    {\n                        "vnum": vnum,\n                        "count": count\n                    }\n                ]\n            }\n        ],\n        "craft_material": [result1, result2],\n        "drop_by": {\n            {\n                "mob_rank": rank,\n                "mob_vnum": vnum,\n                "quest": quest,\n                "type": "limit|quest|stone|kill|drop|common|belt|thiefgloves|dungeon",\n                "rarity": number,\n            }\n        },\n        "in_chest": [chest1, chest2],\n        "in_quest": [\n            {\n                "type": "quest|dungeon|raid",\n                "identifier": "name"\n            }\n        ],\n        "chest_content": {\n            "multidrop": false|"all"|number,\n            "items": {\n                "vnum": vnum,\n                "count": count,\n                "rarity": number\n            }\n        },\n        "reward_of": [\n            {\n                "type": "quest|dungeon|raid",\n                "identifier": "name"\n            }\n        ],\n        "sold_by": [\n            {\n                "npc_vnum": vnum\n            }\n        ]\n        "in_cube": {\n            "as_material" : [cube1, cube2],\n            "as_result" : [cube1, cube2],\n        }\n    }\n}\n'))),(0,a.yg)("h4",{id:"mobsjson"},(0,a.yg)("inlineCode",{parentName:"h4"},"mobs.json")),(0,a.yg)(m,{id:"mobsjson",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "vnum": {\n        "map_indexes": [map1, map2],\n        "drops": [\n            {\n                "vnum": vnum,\n                "vnums": [vnum],\n                "count": count,\n                "rarity": number,\n                "type": "limit|quest|stone|kill|drop|common|belt|thiefgloves|dungeon",\n                "requirements": {\n                    "level_limit_min": 1,\n                    "level_limit_max": 2,\n                    "days": [],\n                    "time_from": 3,\n                    "time_to": 4,\n                    "max_drop": 0,\n                    "during_event": "",\n                    "during_quest": ""\n                }\n            }\n        ],\n        "appears_in_quests": ["quest1"],\n        "appears_in_dungeons": ["dungeon1"],\n        "appears_in_raids": ["raid"],\n        "sells": [\n            {\n                "item_vnum": vnum,\n                "count": 1,\n            }\n        ]\n        "crafts_cube": [cube1, cube2],\n          "spawn": {\n            "map_index": {\n                "random": false|false,\n                "points": [\n                    {\n                        "x": xcoord,\n                        "y": ycoord,\n                        "time": seconds_to_respawn\n                    },\n                ]\n            }\n        }\n    }\n}\n'))),(0,a.yg)("h3",{id:"editable-files"},"Editable Files"),(0,a.yg)(m,{id:"editable-files",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,"In the same folder, the pipeline also produces:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"items_ex.json")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"mobs_ex.json"))),(0,a.yg)("p",null,"These files are designed for manual edits. Developers can add data not captured by the pipeline. Direct edits to ",(0,a.yg)("inlineCode",{parentName:"p"},"items.json")," or ",(0,a.yg)("inlineCode",{parentName:"p"},"mobs.json")," will be overwritten during subsequent pipeline runs, so use the ",(0,a.yg)("inlineCode",{parentName:"p"},"_ex.json")," files for modifications."),(0,a.yg)("hr",null)),(0,a.yg)("h2",{id:"running-the-pipeline"},"Running the Pipeline"),(0,a.yg)("h3",{id:"setup-environment"},"Setup Environment"),(0,a.yg)(m,{id:"setup-environment",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Install a Virtual Environment"),":"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Navigate to the root directory:",(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"cd ./\n"))),(0,a.yg)("li",{parentName:"ul"},"Create a virtual environment:",(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"python -m venv venv\n"))))),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Activate the Virtual Environment"),":"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"On ",(0,a.yg)("strong",{parentName:"li"},"Windows"),":",(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-bash"},".\\venv\\Scripts\\activate\n"))),(0,a.yg)("li",{parentName:"ul"},"On ",(0,a.yg)("strong",{parentName:"li"},"macOS/Linux"),":",(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"source venv/bin/activate\n"))))),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Install Dependencies"),":"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Navigate to ",(0,a.yg)("inlineCode",{parentName:"li"},".devops/wiki_builder"),":",(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"cd .devops/wiki_builder\n"))),(0,a.yg)("li",{parentName:"ul"},"Install requirements:",(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"pip install -r requirements.txt\n"))),(0,a.yg)("li",{parentName:"ul"},"Return to the root directory:",(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"cd ../../\n"))))))),(0,a.yg)("h3",{id:"running-the-script"},"Running the Script"),(0,a.yg)(m,{id:"running-the-script",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"Use the provided scripts to run the pipeline from the root directory (",(0,a.yg)("inlineCode",{parentName:"p"},"./"),"):"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Windows"),": ",(0,a.yg)("inlineCode",{parentName:"li"},"run-wiki-builder.bat")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Linux/Mac"),": ",(0,a.yg)("inlineCode",{parentName:"li"},"run-wiki-builder.sh")))),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"Make the bash script executable:"),(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"chmod +x run-wiki-builder.sh\n"))))),(0,a.yg)("h3",{id:"freeze-dependencies"},"Freeze Dependencies"),(0,a.yg)(m,{id:"freeze-dependencies",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,"If you install or update dependencies, remember to update ",(0,a.yg)("inlineCode",{parentName:"p"},"requirements.txt"),":"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},"Activate the virtual environment."),(0,a.yg)("li",{parentName:"ol"},"Navigate to ",(0,a.yg)("inlineCode",{parentName:"li"},".devops/wiki_builder"),":",(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"cd .devops/wiki_builder\n"))),(0,a.yg)("li",{parentName:"ol"},"Freeze the dependencies:",(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"pip freeze > requirements.txt\n"))),(0,a.yg)("li",{parentName:"ol"},"Return to the root directory:",(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"cd ../../\n"))))))}f.isMDXComponent=!0}}]);